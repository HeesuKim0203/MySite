[{"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Me.js":"1","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Me\\Image.js":"2","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\GlobalStyle.js":"3","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Write.js":"4","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\api.js":"5","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Profile.js":"6","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Header.js":"7","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\Content.js":"8","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Home\\HomeContentContainer.js":"9","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Home\\HomeContent.js":"10","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\BlogPage.js":"11","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Project.js":"12","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Project\\ProjectContent.js":"13","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\BlogRouter.js":"14","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\AsideContent.js":"15","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Blog.js":"16","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\BlogContainer.js":"17","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\App.js":"18","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Menu.js":"19","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Home\\LanguageContent.js":"20","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Home\\UseLanguage.js":"21","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\AsideMenu.js":"22","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\fucntion.js":"23","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Store\\store.js":"24","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\routes.js":"25","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\ButtonContainer.js":"26","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\util.js":"27","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\BlogPageContent.js":"28","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\BlogPageContainer.js":"29","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\index.js":"30","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\theme.js":"31","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Home.js":"32","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Router.js":"33","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Loader.js":"34","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Slide.js":"35","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\CommentContainer.js":"36","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\Comment.js":"37","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Home\\UseLanguageContainer.js":"38"},{"size":9928,"mtime":1615039547046,"results":"39","hashOfConfig":"40"},{"size":5609,"mtime":1615023485243,"results":"41","hashOfConfig":"40"},{"size":1025,"mtime":1609575655417,"results":"42","hashOfConfig":"40"},{"size":7975,"mtime":1615039628678,"results":"43","hashOfConfig":"40"},{"size":1286,"mtime":1615039017481,"results":"44","hashOfConfig":"40"},{"size":9817,"mtime":1615205264485,"results":"45","hashOfConfig":"40"},{"size":6209,"mtime":1612830445331,"results":"46","hashOfConfig":"40"},{"size":4746,"mtime":1615204138413,"results":"47","hashOfConfig":"40"},{"size":1946,"mtime":1608969162346,"results":"48","hashOfConfig":"40"},{"size":1858,"mtime":1608969055220,"results":"49","hashOfConfig":"40"},{"size":3801,"mtime":1613349017893,"results":"50","hashOfConfig":"40"},{"size":1505,"mtime":1613042502636,"results":"51","hashOfConfig":"40"},{"size":4650,"mtime":1615099192878,"results":"52","hashOfConfig":"40"},{"size":1426,"mtime":1613049595367,"results":"53","hashOfConfig":"40"},{"size":3302,"mtime":1615203713485,"results":"54","hashOfConfig":"40"},{"size":1706,"mtime":1615204097781,"results":"55","hashOfConfig":"40"},{"size":841,"mtime":1615203795723,"results":"56","hashOfConfig":"40"},{"size":1665,"mtime":1615039063483,"results":"57","hashOfConfig":"40"},{"size":1174,"mtime":1612830509946,"results":"58","hashOfConfig":"40"},{"size":2309,"mtime":1615098102296,"results":"59","hashOfConfig":"40"},{"size":1365,"mtime":1615098446649,"results":"60","hashOfConfig":"40"},{"size":7036,"mtime":1615204241182,"results":"61","hashOfConfig":"40"},{"size":619,"mtime":1609577723421,"results":"62","hashOfConfig":"40"},{"size":6116,"mtime":1615037126590,"results":"63","hashOfConfig":"40"},{"size":201,"mtime":1608969646485,"results":"64","hashOfConfig":"40"},{"size":3209,"mtime":1612168935612,"results":"65","hashOfConfig":"40"},{"size":1143,"mtime":1615023002263,"results":"66","hashOfConfig":"40"},{"size":1400,"mtime":1612253753224,"results":"67","hashOfConfig":"40"},{"size":789,"mtime":1612507053585,"results":"68","hashOfConfig":"40"},{"size":520,"mtime":1610037000389,"results":"69","hashOfConfig":"40"},{"size":259,"mtime":1613040022600,"results":"70","hashOfConfig":"40"},{"size":5126,"mtime":1615098933288,"results":"71","hashOfConfig":"40"},{"size":1592,"mtime":1608970105298,"results":"72","hashOfConfig":"40"},{"size":859,"mtime":1612169449424,"results":"73","hashOfConfig":"40"},{"size":1946,"mtime":1613050614048,"results":"74","hashOfConfig":"40"},{"size":6764,"mtime":1613349100272,"results":"75","hashOfConfig":"40"},{"size":5215,"mtime":1612521452219,"results":"76","hashOfConfig":"40"},{"size":652,"mtime":1615098511489,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"16vffc3",{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"83"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"83"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"83"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Me.js",["171"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Me\\Image.js",["172"],"import React, { useEffect, useState } from 'react' ;\r\nimport styled from 'styled-components' ;\r\nimport { axiosApi } from '../../Util/api';\r\n\r\nimport { useInputImg } from '../../Util/fucntion' ;\r\n\r\nconst Container = styled.div`\r\n    \r\n    width : 600px ;\r\n    height : 400px ;\r\n    \r\n    padding : 20px ;\r\n\r\n    background-color : #1565c0 ;\r\n    border-radius : 20px ;\r\n\r\n    overflow : hidden ;\r\n`;\r\n\r\nconst ImageListContainer = styled.div`\r\n    float : left ;\r\n    width : 50% ;\r\n    height : 100% ;\r\n    \r\n    border-radius : 20px ;\r\n\r\n    padding : 15px 10px ;\r\n\r\n    background-color : #fff ;\r\n\r\n    /* &::-webkit-scrollbar {\r\n        width : 0.4em ;  \r\n    }\r\n    &::-webkit-scrollbar,\r\n    &::-webkit-scrollbar-thumb {\r\n        overflow : visible ;\r\n        border-radius : 4px ;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: rgba(0, 0, 0, 0.2) ; \r\n    } */\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n    background-color : #fff ;\r\n    float : right ;\r\n\r\n    width : 48% ;\r\n    height : 100% ;\r\n\r\n    border-radius : 20px ;\r\n`;\r\n\r\nconst ImagePreviewContainer = styled.div`\r\n    width : 100% ;\r\n    height : 160px ;\r\n    margin-bottom : 30px ;\r\n`;\r\n\r\nconst ImagePreview = styled.img`\r\n    width : 100% ;\r\n    height : 100% ;\r\n\r\n    background-image : url(${props => props.url}) ;\r\n    background-repeat : no-repeat ;\r\n    background-size : cover ;\r\n`;\r\n\r\nconst Input = styled.input`\r\n\r\n`;\r\n\r\nconst Form = styled.form`\r\n    \r\n`;\r\n\r\nconst Button = styled.button`\r\n    all : unset ;\r\n\r\n    font-size : 14px ;\r\n    font-weight : 550 ;\r\n\r\n    border-radius : 15px ;\r\n\r\n    padding : 4px 8px ;\r\n    margin : 2px 4px ;\r\n\r\n    background-color : #1de9b6 ;\r\n`;\r\n\r\nconst ImageContent = styled.div`\r\n    overflow : hidden ; \r\n    text-overflow : ellipsis ; \r\n    white-space : nowrap ;\r\n`;\r\n\r\nconst Msg = styled.div`\r\n\r\n    width : 100% ;\r\n    height : 100% ;\r\n    \r\n    font-size : 22px ;\r\n    font-weight : 600 ;\r\n    color : #b71c1c ;\r\n\r\n    display : flex ;\r\n\r\n    justify-content : center ;\r\n    align-items : center ;\r\n    \r\n`;\r\n\r\nconst Image = () => {\r\n\r\n    const [ imageList, setImageList ] = useState([]) ;\r\n    const [ selectUrl, setSelectUrl ] = useState('') ;\r\n\r\n    const { \r\n        file : img, \r\n        url : imgUrl, \r\n        onChange : imgOnChange \r\n    } = useInputImg('') ; \r\n\r\n    useEffect(() => {\r\n        async function getImgList() {\r\n\r\n            try {\r\n                const {\r\n                    data : { \r\n                        images\r\n                    }\r\n                } = await axiosApi.getImgList() ;\r\n\r\n                setImageList(images) ;\r\n            }catch {\r\n\r\n            }\r\n        }\r\n\r\n        getImgList() ;\r\n\r\n\r\n        return () => {\r\n            setSelectUrl('') ;\r\n            setImageList([]) ;\r\n        }\r\n\r\n    }, []) ;\r\n\r\n    async function onSubmitImage(e) {\r\n        e.preventDefault() ;\r\n\r\n        const formData = new FormData() ;\r\n\r\n        formData.append('file', img) ;\r\n\r\n        try {\r\n            const { \r\n                data \r\n            } = await axiosApi.addImg(formData) ;\r\n\r\n            setImageList(imageList.concat(data)) ;\r\n        }catch {\r\n            \r\n\r\n        }finally {\r\n            \r\n        }\r\n    }\r\n\r\n    function onClickImage(e) {\r\n        setSelectUrl(e.currentTarget !== e.target ? \r\n            imageList[imageList.findIndex(image => image.url === e.target.innerHTML)]\r\n            : null\r\n        ) ;\r\n    }\r\n\r\n    async function onDeleteImg(e) {\r\n\r\n        if(selectUrl !== null) {\r\n            try {\r\n                const { data } = await axiosApi.deleteImg(selectUrl.id) ;\r\n                if(data) {\r\n                    const id = imageList.findIndex(image => image.id === selectUrl.id) ;\r\n                    setImageList([\r\n                        ...imageList.slice(0, id),\r\n                        ...imageList.slice(id + 1, imageList.length)\r\n                    ]) ;\r\n                }\r\n            }catch {\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    function onClickImageContent(e) {\r\n\r\n        const node = e.target ;\r\n        const text = node.innerHTML ;\r\n\r\n        const createInput = document.createElement('input') ;\r\n        createInput.setAttribute('type', 'text') ;\r\n\r\n        node.appendChild(createInput) ;\r\n\r\n        createInput.value = text ;\r\n        \r\n        createInput.select() ;\r\n        document.execCommand('copy') ;\r\n\r\n        node.removeChild(createInput) ;\r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <ImageListContainer onClick={onClickImage}>\r\n                {imageList && imageList.map((content, index) => \r\n                    <ImageContent onClick={onClickImageContent} key={index}>\r\n                        {content.url}\r\n                    </ImageContent>\r\n                )}\r\n            </ImageListContainer>\r\n            <InputContainer>\r\n            <ImagePreviewContainer>\r\n                {selectUrl ? \r\n                    (<ImagePreview src={selectUrl && selectUrl.url} />) : (<Msg>선택된 이미지 없음</Msg>) }\r\n                <Button onClick={onDeleteImg}>삭제</Button>\r\n            </ImagePreviewContainer>\r\n            <Form onSubmit={onSubmitImage} action=\"POST\">\r\n                <Input\r\n                     name=\"file\"\r\n                     type=\"file\"\r\n                     accept='image/jpg, image/png, image/jpeg, image/gif'\r\n                     onChange={imgOnChange}\r\n                     required\r\n                />\r\n                <Button type=\"submit\">이미지 추가</Button>\r\n            </Form>\r\n            </InputContainer>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Image ;",["173","174"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\GlobalStyle.js",[],["175","176"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Write.js",["177"],"import React, { useState } from 'react' ;\r\nimport styled from 'styled-components' ;\r\n\r\nimport Content from '../Components/Blog/Content' ;\r\n\r\nimport MDEditor from '@uiw/react-md-editor' ;\r\nimport { axiosApi } from '../Util/api' ;\r\n\r\nimport Image from '../Components/Me/Image' ;\r\nimport { Redirect } from 'react-router-dom' ;\r\n\r\nimport { DOCUMENT } from '../Util/routes' ;\r\n\r\nconst Container = styled.div`\r\n    \r\n`;\r\n\r\nconst Header = styled.div`\r\n    width : 100% ;\r\n    height : 500px ;\r\n    overflow : hidden ;\r\n\r\n    display : ${props => props.display} ;\r\n    align-items : center ;\r\n    justify-content : center ;\r\n\r\n\r\n    @media ${props => props.theme.laptop} {\r\n        height : 300px ;\r\n    }\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n    display : flex ;\r\n\r\n    flex-direction: column ;\r\n\r\n    width : 30% ;\r\n`;\r\n\r\nconst PreviewContainer = styled.div`\r\n    width : 40% ;\r\n\r\n    display : flex ;\r\n    align-items : center ;\r\n    justify-content : center ;\r\n`;\r\n\r\nconst Title = styled.input`\r\n    all : unset ;\r\n    \r\n    width : 300px ;\r\n    height : 25px ;\r\n\r\n    border : 2px solid ${props => props.status} ;\r\n    \r\n    font-size : 16px ;\r\n    padding-left : 7px ;\r\n`;\r\n\r\nconst Language = styled.select`\r\n    all : unset ;\r\n\r\n    width : 300px ;\r\n    height : 25px ;\r\n\r\n    line-height : 25px ;\r\n\r\n    background-image : url(${props => props.url}) ;\r\n    background-size : 30px 30px ;\r\n    background-repeat : no-repeat ;\r\n    background-position : 280px -1px ;\r\n\r\n    border : 2px solid ${props => props.status} ;\r\n    \r\n    font-size : 16px ;\r\n    padding-left : 7px ;\r\n`;\r\n\r\nconst LanguageOption = styled.option`\r\n    all : unset ;\r\n`;\r\n\r\nconst ImgInput = styled.input`\r\n    all : unset ;\r\n\r\n    width : 300px ;\r\n    height : 25px ;\r\n\r\n    line-height : 26px ;\r\n\r\n    border : 2px solid ${props => props.status} ;\r\n\r\n    font-size : 14px ;\r\n    padding-right : 7px ;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    &:not(:first-child) {\r\n        margin-top : 10px ;\r\n    }\r\n    &:not(:last-child) {\r\n        margin-bottom : 10px ;\r\n    }\r\n`;\r\n\r\nconst Main = styled.main`\r\n\r\n`;\r\n\r\nconst FixdMenu = styled.div`\r\n    position : fixed ;\r\n    \r\n    bottom : 20px ;\r\n    right : 20px ;\r\n\r\n    display : flex ;\r\n    align-items : center ;\r\n    justify-content : center ;\r\n\r\n`;\r\n\r\nconst Menu = styled.div`\r\n\r\n    box-sizing : content-box ;\r\n    height : 25px ;\r\n    \r\n    border : 1px solid #111 ;\r\n\r\n    font-size : 14px ;\r\n    font-weight : 600 ;\r\n\r\n    padding : 5px 10px ;\r\n\r\n    user-select : none ;\r\n    cursor : pointer ;\r\n\r\n    display : flex ;\r\n    justify-content : center ;\r\n    align-items : center ;\r\n\r\n    &:not(:last-child) {\r\n        margin-right : 5px ;\r\n    }\r\n`;\r\n\r\nconst FixedMorkDown = styled.div`\r\n\r\n    width : 800px ;\r\n\r\n    margin : 0 auto ;\r\n    display : ${props => props.display} ;\r\n`;\r\n\r\nconst ImageListContainer = styled.div`\r\n    display : ${props => props.display} ;\r\n`;\r\n\r\nconst Write = () => {\r\n    const [ title, setTitle ] = useState('') ;\r\n    const [ html, setHTML ] = useState('') ;\r\n    const [ type, setType ] = useState('') ;\r\n    const [ imageUrl, setImageUrl] = useState('') ;\r\n\r\n    const [ htmlWriter, setHtmlWriter ] = useState(false) ;\r\n    const [ preview, setPreview ] = useState(false) ;\r\n    const [ ImageView, setImageView ] = useState(false) ;\r\n\r\n    const [ pageState, setPageState ] = useState(true) ;\r\n\r\n    async function onSubmitImage(e) {\r\n        e.preventDefault() ;\r\n\r\n\r\n        const contentFormData = new FormData() ;\r\n        contentFormData.append('title', title) ;\r\n        contentFormData.append('text', html) ;\r\n        contentFormData.append('type', type) ;\r\n        contentFormData.append('image_url', imageUrl) ;\r\n\r\n        const data = await axiosApi.createContent(contentFormData) ;\r\n\r\n        setPageState(!pageState) ;\r\n    }\r\n\r\n    function onChangeType(e) {\r\n        setType(e.target.value) ;\r\n    }\r\n\r\n    function onChangeTitle(e) {\r\n        setTitle(e.target.value) ;\r\n    }\r\n\r\n    function onViewHtml(e) {\r\n        setHtmlWriter(htmlWriter ? false : true) ;\r\n    }\r\n\r\n    function onViewPreview(e) {\r\n        setPreview(preview ? false : true) ;\r\n    }\r\n\r\n    function onViewImage(e) {\r\n        setImageView(ImageView ? false :  true) ;\r\n    }\r\n\r\n    function onImageUrl(e) {\r\n        setImageUrl(e.target.value) ;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        { pageState ? (\r\n            <Container>\r\n                <Header display={preview ? 'flex' : 'none'}>\r\n                    <InputContainer>\r\n                        <Label name=\"title\">제목</Label>\r\n                        <Title \r\n                            type=\"text\" \r\n                            name=\"title\" \r\n                            value={title} \r\n                            onChange={onChangeTitle} \r\n                            required\r\n                            status={title.length >= 1 ? 'blue' : 'red'}\r\n                        />\r\n                        <Label name=\"type\">타입</Label>\r\n                        <Language\r\n                            type=\"text\"\r\n                            name=\"type\"\r\n                            value={type}\r\n                            onChange={onChangeType}\r\n                            status={type ? 'blue' : 'red'}\r\n                            url={require(\"../assets/select_arrow.PNG\").default}\r\n                        >\r\n                            <LanguageOption value=\"\">--Select Type--</LanguageOption>\r\n                            <LanguageOption value=\"JS\">JS</LanguageOption>\r\n                            <LanguageOption value=\"HTML\">HTML</LanguageOption>\r\n                            <LanguageOption value=\"CSS3\">CSS</LanguageOption>\r\n                            <LanguageOption value=\"React\">React</LanguageOption>\r\n                            <LanguageOption value=\"일상\">일상</LanguageOption>\r\n                            <LanguageOption value=\"이모저모\">이모저모</LanguageOption>\r\n                            <LanguageOption value=\"여행기\">여행기</LanguageOption>\r\n                        </Language>\r\n                        <Label name=\"file\">이미지 파일</Label>\r\n                        <ImgInput \r\n                            name=\"file\"\r\n                            type=\"text\"\r\n                            onChange={onImageUrl}\r\n                            required\r\n                            status={imageUrl ? 'blue' : 'red'}\r\n                        />\r\n                    </InputContainer>\r\n                    <PreviewContainer>\r\n                        { \r\n                            <Content \r\n                                content={{\r\n                                    title,\r\n                                    type : type,\r\n                                    image_url : imageUrl,\r\n                                }}\r\n                            /> \r\n                        }\r\n                    </PreviewContainer>\r\n                </Header>\r\n                <Main>\r\n                    <ImageListContainer display={ImageView ? 'block' : 'none'}>\r\n                        <Image />\r\n                    </ImageListContainer>\r\n                    <FixedMorkDown\r\n                        display={htmlWriter ? 'block' : 'none' }\r\n                    >\r\n                        <MDEditor\r\n                            value={html}\r\n                            onChange={setHTML}\r\n                        />\r\n                    </FixedMorkDown>\r\n                    <MDEditor.Markdown source={html || null} />\r\n                </Main>\r\n                <FixdMenu>\r\n                    <Menu onClick={onViewPreview}>개시글 컨텐츠</Menu>\r\n                    <Menu onClick={onViewHtml}>HTML</Menu>\r\n                    <Menu onClick={onViewImage}>이미지</Menu>\r\n                    <Menu onClick={onSubmitImage}>작성</Menu>\r\n                </FixdMenu>\r\n            </Container>) : (\r\n                <Redirect to={DOCUMENT} />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Write ;","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\api.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Profile.js",["178","179","180"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Header.js",["181"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\Content.js",["182"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Home\\HomeContentContainer.js",[],["183","184"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Home\\HomeContent.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\BlogPage.js",["185"],"import React, { useState, useEffect } from 'react' ;\r\nimport styled from 'styled-components' ;\r\n\r\nimport MDEditor from '@uiw/react-md-editor' ;\r\nimport { connect } from 'react-redux';\r\n\r\nimport ButtonContainer from '../Components/Blog/ButtonContainer' ;\r\nimport BlogPageContainer from '../Components/Blog/BlogPageContainer' ;\r\n\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n\r\nimport {\r\n    DOCUMENT\r\n} from '../Util/routes' ;\r\nimport CommentContainer from '../Components/Blog/CommentContainer';\r\nimport { blogPageContentNum } from '../Util/util';\r\nimport { createAction } from '../Store/store';\r\n\r\nconst Container = styled.div`\r\n    width : 100% ;\r\n    \r\n    overflow : hidden ;\r\n`;\r\n\r\nconst Main = styled.div`\r\n    width : 100% ;\r\n\r\n    float : left ;\r\n\r\n    padding : 50px 20px ;\r\n`;\r\n\r\nconst ContentBox = styled.div`\r\n    \r\n`;\r\n\r\nconst Footer = styled.div`\r\n    width : 100% ;\r\n\r\n    float : left ;\r\n`;\r\n\r\nconst ButtonWrap = styled.div`\r\n    margin-top : 40px ;\r\n`;\r\n\r\nconst CommentWrap= styled.div`\r\n    width : 100% ;\r\n`;\r\n\r\nconst BlogPage = ({ pageContents, pageSelect, text, id, pageContentsPotition, updatePageSelect }) => {\r\n\r\n    const [ redirect, setRedirect ] = useState(false) ;\r\n\r\n    useEffect(() => {\r\n\r\n        if(!text || !id) \r\n            setRedirect(true) ;\r\n\r\n    }, [text, id]) ;\r\n\r\n    useEffect(() => {\r\n\r\n        updatePageSelect(pageContentsPotition) ;\r\n\r\n    }, []) ;\r\n\r\n    return (\r\n        <>\r\n            {redirect ? (\r\n                <Redirect to={DOCUMENT} />\r\n            ) : (<Container>\r\n                <Main>\r\n                    <MDEditor.Markdown source={ text } />\r\n                </Main>\r\n                <Footer>\r\n                    <ContentBox>\r\n                    { pageContents && pageContents.map((content, index) => {\r\n                        return pageSelect === index ? (\r\n                            <BlogPageContainer \r\n                                key={index}\r\n                                pageContents={content}\r\n                                pageSelect={true}\r\n                            />\r\n                        ) : (\r\n                            <BlogPageContainer \r\n                                key={index}\r\n                                pageContents={content}\r\n                            />\r\n                        )\r\n                    })}\r\n                    </ContentBox>\r\n                    <ButtonWrap>\r\n                        <ButtonContainer />\r\n                    </ButtonWrap>\r\n                    <CommentWrap>\r\n                        <CommentContainer contentId={id} />\r\n                    </CommentWrap>\r\n                </Footer>\r\n            </Container>)}\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state, stateAll) {\r\n\r\n    const { \r\n        content : {\r\n            pageContents, pageSelect, defaultData, pageButtonsData\r\n        }\r\n    } = state ;\r\n\r\n    const {\r\n        location : {\r\n            pathname\r\n        }\r\n    } = stateAll ;\r\n\r\n    const findId = pathname.replace(`${DOCUMENT}/`, \"\") ;\r\n\r\n    const id = defaultData.findIndex(content => content.id === Number(findId)) ;\r\n    const content = defaultData[id] ;\r\n\r\n    let position ;\r\n\r\n    pageButtonsData.forEach(buttons => {\r\n        if(buttons * blogPageContentNum <= id && id <= (buttons + 1) * blogPageContentNum)\r\n            position = buttons ;\r\n    }) ;\r\n\r\n    return {\r\n        pageContents,\r\n        pageSelect,\r\n        text : content ? content.text : \"\",\r\n        id : content ? content.id : -1,\r\n        pageContentsPotition : position \r\n    } ;\r\n} ;\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updatePageSelect : select => dispatch(createAction.updatePageSelect(select))\r\n    }\r\n} ;\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BlogPage)) ;",["186","187"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Project.js",["188","189"],"import React, { useEffect, useState } from 'react' ;\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components' ;\r\n\r\nimport ProjectContent from '../Components/Project/ProjectContent' ;\r\n\r\nconst Container = styled.div`\r\n    width : 70% ;\r\n\r\n    margin : 0 auto ;\r\n\r\n    display : flex ;\r\n    flex-direction : column ;\r\n    align-items : center ;\r\n\r\n    @media ${props => props.theme.mobileL} {\r\n        width : 100% ;\r\n    }\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n    width : 100% ;\r\n\r\n    display : grid ;\r\n    \r\n    grid-template-columns : repeat(2, 50%) ;\r\n    grid-row-gap : 30px ;\r\n\r\n    @media ${props => props.theme.tabletS} {\r\n        grid-template-columns : repeat(1, 100%) ;\r\n    }\r\n`;\r\n\r\nconst Project = ({ projectsData }) => {\r\n\r\n    // const [ windowWidth, setWindowWidth ] = useState(window.innerWidth) ;\r\n\r\n    // useEffect(() => {\r\n        \r\n    // }, []) ;\r\n\r\n    return (\r\n        <Container>\r\n            \r\n            <ContentContainer>\r\n                {projectsData && projectsData.map((content, index) => (\r\n                    <ProjectContent \r\n                        key={index}\r\n                        content={content}\r\n                    />\r\n                ))}\r\n            </ContentContainer>\r\n        </Container>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const { \r\n        project : { projectsData }\r\n    } = state ;\r\n  \r\n    return {\r\n        projectsData\r\n    } ;\r\n  } ;\r\n\r\nexport default connect(mapStateToProps, null)(Project) ;","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Project\\ProjectContent.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\BlogRouter.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\AsideContent.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Blog.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\BlogContainer.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\App.js",["190"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Menu.js",[],["191","192"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Home\\LanguageContent.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Home\\UseLanguage.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\AsideMenu.js",["193"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\fucntion.js",["194","195"],"import React, { useState } from 'react' ;\r\nimport { axiosApi } from './api' ;\r\n\r\nexport const useInputImg = (initialValue) => {\r\n    const [ file, setFile ] = useState(initialValue) ;\r\n    const [ url, setUrl ] = useState('') ;\r\n\r\n    const onChange = e => {\r\n        let reader = new FileReader() ;\r\n        const {\r\n            target : {\r\n                files : [ fileData ]\r\n            }\r\n        } = e ;\r\n        reader.onloadend = () => {\r\n            setFile(fileData) ;\r\n            setUrl(reader.result) ;\r\n        }\r\n        reader.readAsDataURL(fileData) ;\r\n    }\r\n    return { file, url, onChange } ;\r\n} ;",["196","197"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Store\\store.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\routes.js",[],["198","199"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\ButtonContainer.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\util.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\BlogPageContent.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\BlogPageContainer.js",["200","201"],"import React, { useEffect } from 'react' ;\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components' ;\r\n\r\nimport Content from './BlogPageContent' ;\r\n\r\nconst Container = styled.div`\r\n    \r\n    width : 100% ;\r\n\r\n    display : ${props => props.display} ;\r\n    flex-direction : column ;\r\n\r\n    border : 1.3px solid #999 ;\r\n`;\r\n\r\nconst BlogPageContainer = ({ pageContents, pageSelect }) => {\r\n    return (\r\n        <Container\r\n            display={pageSelect ? 'flex' : 'none' }\r\n        >\r\n            { pageContents && pageContents.map((content, index) => (\r\n                <Content \r\n                    key={index}\r\n                    content={content}\r\n                />\r\n            )) }\r\n        </Container>\r\n    ) ;\r\n} ;\r\n\r\n\r\nexport default BlogPageContainer ;",["202","203"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\index.js",[],["204","205"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\theme.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Home.js",["206","207"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Router.js",["208"],"import React from 'react' ;\r\nimport { BrowserRouter as Router, Route, Switch, Redirect, withRouter } from 'react-router-dom' ;\r\n\r\nimport styled from 'styled-components' ;\r\n\r\nimport Header from './Header' ;\r\nimport Home from '../Routes/Home' ;\r\nimport Blog from '../Routes/BlogRouter' ;\r\nimport Profile from '../Routes/Profile' ;\r\nimport Write from '../Routes/Write' ;\r\nimport Me from '../Routes/Me' ;\r\n\r\nimport { \r\n    HOME,\r\n    DOCUMENT,\r\n    PROFILE,\r\n    MY,\r\n    WRITE\r\n} from '../Util/routes' ;\r\nimport { withCookies } from 'react-cookie' ;\r\n\r\nconst Container = styled.div`\r\n    width : 100% ;\r\n    position : relative ;\r\n`;\r\n\r\nconst TemplateContainer = styled.main`\r\n    width : 80% ;\r\n    margin : 0 auto ;\r\n\r\n    background-color : #fff ;\r\n`;\r\n\r\nconst Footer = styled.footer`\r\n\r\n    width : 100% ;\r\n    height : 80px ;\r\n`;\r\n\r\nconst Template = withCookies(withRouter(({ location : { pathname }}) => {\r\n    return (\r\n        <TemplateContainer position={pathname === HOME ? 'static' : 'absolute'} >\r\n            <Route path={HOME} exact component={Home} />\r\n            <Route path={DOCUMENT} component={Blog} />\r\n            <Route path={MY} component={Me} />\r\n            <Route path={PROFILE} component={Profile} />\r\n            <Route path={WRITE} component={Write} />\r\n            <Redirect path=\"*\" to=\"/\" />\r\n        </TemplateContainer>\r\n    ) ;\r\n})) ;\r\n\r\nexport default () => (\r\n    <Container>\r\n        <Router>\r\n            <Header />\r\n            <Switch>\r\n                <Template/>\r\n            </Switch>\r\n        </Router>\r\n        <Footer />\r\n    </Container>\r\n) ;\r\n\r\n","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Loader.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Slide.js",["209"],"// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from 'swiper/react' ;\r\n\r\nimport SwiperCore, { Autoplay } from 'swiper'\r\n\r\nimport 'swiper/swiper-bundle.css' ;\r\nimport { connect } from 'react-redux';\r\nimport Content from './Blog/Content' ;\r\nimport { useEffect, useState } from 'react';\r\nimport { size } from '../Util/theme' ;\r\n\r\nSwiperCore.use([Autoplay]) ;\r\n\r\nconst Slide = ({ defaultData }) => {\r\n\r\n  const { tabletS, mobileL } = size ;\r\n\r\n  const [ viewContentNum, setViewContentNum ] = useState(3) ;\r\n\r\n  const viewContentNumCheck = innerWidth => {\r\n    if(innerWidth <= tabletS && innerWidth >= mobileL ) {\r\n      setViewContentNum(2) ;\r\n    }else if( innerWidth <= mobileL ) {\r\n      setViewContentNum(1) ;\r\n    }else if(innerWidth >= tabletS ) {\r\n      setViewContentNum(3) ;\r\n    }\r\n  }\r\n\r\n  const onResize = (e) => {\r\n    const { currentTarget : { innerWidth } } = e ;\r\n\r\n    viewContentNumCheck(innerWidth) ;\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    const { innerWidth } = window ;\r\n\r\n    const swiperContainer = document.querySelector('div.swiper-container') ;\r\n    swiperContainer.style.padding = \"10px 0 10px 0\" ;\r\n\r\n    viewContentNumCheck(innerWidth) ;\r\n\r\n    window.addEventListener('resize', onResize, false) ;\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', onResize, false) ;\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n      <Swiper\r\n        spaceBetween={30}\r\n        slidesPerView={viewContentNum}\r\n        onSlideChange={() => null}\r\n        onSwiper={(swiper) => {}}\r\n        autoplay={true}\r\n      >\r\n      { \r\n        defaultData.map((data, index) => (<SwiperSlide  key={index} width=\"300px\"><Content content={data}/></SwiperSlide>))\r\n      }\r\n      </Swiper>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const { \r\n        content : { \r\n            defaultData \r\n        } \r\n    } = state ;\r\n    return {\r\n        defaultData\r\n    } ;\r\n} ;\r\n\r\nexport default connect(mapStateToProps, null)(Slide) ;","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\CommentContainer.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\Comment.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Home\\UseLanguageContainer.js",[],{"ruleId":"210","severity":1,"message":"211","line":193,"column":13,"nodeType":"212","messageId":"213","endLine":193,"endColumn":21},{"ruleId":"210","severity":1,"message":"214","line":120,"column":15,"nodeType":"212","messageId":"213","endLine":120,"endColumn":21},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"215","replacedBy":"219"},{"ruleId":"217","replacedBy":"220"},{"ruleId":"210","severity":1,"message":"221","line":181,"column":15,"nodeType":"212","messageId":"213","endLine":181,"endColumn":19},{"ruleId":"210","severity":1,"message":"222","line":7,"column":20,"nodeType":"212","messageId":"213","endLine":7,"endColumn":23},{"ruleId":"223","severity":1,"message":"224","line":254,"column":8,"nodeType":"225","endLine":254,"endColumn":10,"suggestions":"226"},{"ruleId":"223","severity":1,"message":"227","line":256,"column":5,"nodeType":"212","endLine":256,"endColumn":14,"suggestions":"228"},{"ruleId":"223","severity":1,"message":"229","line":241,"column":8,"nodeType":"225","endLine":241,"endColumn":17,"suggestions":"230"},{"ruleId":"210","severity":1,"message":"231","line":193,"column":13,"nodeType":"212","messageId":"213","endLine":193,"endColumn":24},{"ruleId":"215","replacedBy":"232"},{"ruleId":"217","replacedBy":"233"},{"ruleId":"223","severity":1,"message":"234","line":66,"column":8,"nodeType":"225","endLine":66,"endColumn":10,"suggestions":"235"},{"ruleId":"215","replacedBy":"236"},{"ruleId":"217","replacedBy":"237"},{"ruleId":"210","severity":1,"message":"238","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":26},{"ruleId":"210","severity":1,"message":"239","line":1,"column":28,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},{"ruleId":"223","severity":1,"message":"240","line":51,"column":4,"nodeType":"225","endLine":51,"endColumn":6,"suggestions":"241"},{"ruleId":"215","replacedBy":"242"},{"ruleId":"217","replacedBy":"243"},{"ruleId":"223","severity":1,"message":"224","line":224,"column":10,"nodeType":"225","endLine":224,"endColumn":12,"suggestions":"244"},{"ruleId":"210","severity":1,"message":"245","line":1,"column":8,"nodeType":"212","messageId":"213","endLine":1,"endColumn":13},{"ruleId":"210","severity":1,"message":"246","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":18},{"ruleId":"215","replacedBy":"247"},{"ruleId":"217","replacedBy":"248"},{"ruleId":"215","replacedBy":"249"},{"ruleId":"217","replacedBy":"250"},{"ruleId":"210","severity":1,"message":"238","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":26},{"ruleId":"210","severity":1,"message":"251","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":17},{"ruleId":"215","replacedBy":"252"},{"ruleId":"217","replacedBy":"253"},{"ruleId":"215","replacedBy":"254"},{"ruleId":"217","replacedBy":"255"},{"ruleId":"210","severity":1,"message":"238","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":26},{"ruleId":"210","severity":1,"message":"239","line":1,"column":28,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},{"ruleId":"256","severity":1,"message":"257","line":53,"column":1,"nodeType":"258","endLine":63,"endColumn":4},{"ruleId":"223","severity":1,"message":"224","line":50,"column":6,"nodeType":"225","endLine":50,"endColumn":8,"suggestions":"259"},"no-unused-vars","'lineData' is assigned a value but never used.","Identifier","unusedVar","'imgUrl' is assigned a value but never used.","no-native-reassign",["260"],"no-negated-in-lhs",["261"],["260"],["261"],"'data' is assigned a value but never used.","'api' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onResize' and 'viewContentNumCheck'. Either include them or remove the dependency array.","ArrayExpression",["262"],"React Hook useEffect contains a call to 'setLogin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [cookies] as a second argument to the useEffect Hook.",["263"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.",["264"],"'defaultData' is assigned a value but never used.",["260"],["261"],"React Hook useEffect has missing dependencies: 'pageContentsPotition' and 'updatePageSelect'. Either include them or remove the dependency array. If 'updatePageSelect' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["265"],["260"],["261"],"'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'setContents', 'setDefaultData', 'setPageContents', and 'setProjectContents'. Either include them or remove the dependency array. If 'setDefaultData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["266"],["260"],["261"],["267"],"'React' is defined but never used.","'axiosApi' is defined but never used.",["260"],["261"],["260"],["261"],"'connect' is defined but never used.",["260"],["261"],["260"],["261"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["268"],"no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"269","fix":"279"},{"desc":"269","fix":"280"},"Update the dependencies array to be: [onResize, viewContentNumCheck]",{"range":"281","text":"282"},"Add dependencies array: [cookies]",{"range":"283","text":"284"},"Update the dependencies array to be: [data, props]",{"range":"285","text":"286"},"Update the dependencies array to be: [pageContentsPotition, updatePageSelect]",{"range":"287","text":"288"},"Update the dependencies array to be: [setContents, setDefaultData, setPageContents, setProjectContents]",{"range":"289","text":"290"},{"range":"291","text":"282"},{"range":"292","text":"282"},[4905,4907],"[onResize, viewContentNumCheck]",[5098,5098],", [cookies]",[4880,4889],"[data, props]",[1403,1405],"[pageContentsPotition, updatePageSelect]",[1088,1090],"[setContents, setDefaultData, setPageContents, setProjectContents]",[4641,4643],[1336,1338]]