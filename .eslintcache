[{"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Me.js":"1","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Me\\Image.js":"2","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\GlobalStyle.js":"3","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Write.js":"4","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\api.js":"5","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Profile.js":"6","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Header.js":"7","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\Content.js":"8","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\BlogPage.js":"9","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Project.js":"10","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Project\\ProjectContent.js":"11","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\BlogRouter.js":"12","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\AsideContent.js":"13","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Blog.js":"14","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\BlogContainer.js":"15","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\App.js":"16","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Menu.js":"17","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Home\\LanguageContent.js":"18","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Home\\UseLanguage.js":"19","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\AsideMenu.js":"20","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\fucntion.js":"21","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Store\\store.js":"22","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\routes.js":"23","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\ButtonContainer.js":"24","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\util.js":"25","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\BlogPageContent.js":"26","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\BlogPageContainer.js":"27","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\index.js":"28","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\theme.js":"29","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Home.js":"30","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Router.js":"31","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Loader.js":"32","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Slide.js":"33","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\CommentContainer.js":"34","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\Comment.js":"35","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Home\\UseLanguageContainer.js":"36"},{"size":10317,"mtime":1615764547859,"results":"37","hashOfConfig":"38"},{"size":5609,"mtime":1615023485243,"results":"39","hashOfConfig":"38"},{"size":1226,"mtime":1615548073638,"results":"40","hashOfConfig":"38"},{"size":8111,"mtime":1615353422082,"results":"41","hashOfConfig":"38"},{"size":1286,"mtime":1615718901190,"results":"42","hashOfConfig":"38"},{"size":10353,"mtime":1615548325242,"results":"43","hashOfConfig":"38"},{"size":7305,"mtime":1615357481942,"results":"44","hashOfConfig":"38"},{"size":4770,"mtime":1615729483676,"results":"45","hashOfConfig":"38"},{"size":3549,"mtime":1615293265459,"results":"46","hashOfConfig":"38"},{"size":1345,"mtime":1615294198507,"results":"47","hashOfConfig":"38"},{"size":5801,"mtime":1615345611427,"results":"48","hashOfConfig":"38"},{"size":1626,"mtime":1615353409207,"results":"49","hashOfConfig":"38"},{"size":3520,"mtime":1615333719497,"results":"50","hashOfConfig":"38"},{"size":2317,"mtime":1615334781449,"results":"51","hashOfConfig":"38"},{"size":951,"mtime":1615334762448,"results":"52","hashOfConfig":"38"},{"size":1665,"mtime":1615039063483,"results":"53","hashOfConfig":"38"},{"size":1174,"mtime":1615337662355,"results":"54","hashOfConfig":"38"},{"size":2309,"mtime":1615098102296,"results":"55","hashOfConfig":"38"},{"size":1365,"mtime":1615098446649,"results":"56","hashOfConfig":"38"},{"size":7830,"mtime":1615384633565,"results":"57","hashOfConfig":"38"},{"size":619,"mtime":1609577723421,"results":"58","hashOfConfig":"38"},{"size":6322,"mtime":1615356225430,"results":"59","hashOfConfig":"38"},{"size":201,"mtime":1608969646485,"results":"60","hashOfConfig":"38"},{"size":3211,"mtime":1615247385492,"results":"61","hashOfConfig":"38"},{"size":1208,"mtime":1615292180392,"results":"62","hashOfConfig":"38"},{"size":1788,"mtime":1615345599411,"results":"63","hashOfConfig":"38"},{"size":833,"mtime":1615247413124,"results":"64","hashOfConfig":"38"},{"size":520,"mtime":1610037000389,"results":"65","hashOfConfig":"38"},{"size":259,"mtime":1613040022600,"results":"66","hashOfConfig":"38"},{"size":7183,"mtime":1615372064473,"results":"67","hashOfConfig":"38"},{"size":1677,"mtime":1615290831089,"results":"68","hashOfConfig":"38"},{"size":859,"mtime":1612169449424,"results":"69","hashOfConfig":"38"},{"size":1948,"mtime":1615246997442,"results":"70","hashOfConfig":"38"},{"size":7301,"mtime":1615217037787,"results":"71","hashOfConfig":"38"},{"size":6402,"mtime":1615338556948,"results":"72","hashOfConfig":"38"},{"size":652,"mtime":1615332804526,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"16vffc3",{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"113"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"130"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Me.js",["172"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Me\\Image.js",["173"],"import React, { useEffect, useState } from 'react' ;\r\nimport styled from 'styled-components' ;\r\nimport { axiosApi } from '../../Util/api';\r\n\r\nimport { useInputImg } from '../../Util/fucntion' ;\r\n\r\nconst Container = styled.div`\r\n    \r\n    width : 600px ;\r\n    height : 400px ;\r\n    \r\n    padding : 20px ;\r\n\r\n    background-color : #1565c0 ;\r\n    border-radius : 20px ;\r\n\r\n    overflow : hidden ;\r\n`;\r\n\r\nconst ImageListContainer = styled.div`\r\n    float : left ;\r\n    width : 50% ;\r\n    height : 100% ;\r\n    \r\n    border-radius : 20px ;\r\n\r\n    padding : 15px 10px ;\r\n\r\n    background-color : #fff ;\r\n\r\n    /* &::-webkit-scrollbar {\r\n        width : 0.4em ;  \r\n    }\r\n    &::-webkit-scrollbar,\r\n    &::-webkit-scrollbar-thumb {\r\n        overflow : visible ;\r\n        border-radius : 4px ;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: rgba(0, 0, 0, 0.2) ; \r\n    } */\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n    background-color : #fff ;\r\n    float : right ;\r\n\r\n    width : 48% ;\r\n    height : 100% ;\r\n\r\n    border-radius : 20px ;\r\n`;\r\n\r\nconst ImagePreviewContainer = styled.div`\r\n    width : 100% ;\r\n    height : 160px ;\r\n    margin-bottom : 30px ;\r\n`;\r\n\r\nconst ImagePreview = styled.img`\r\n    width : 100% ;\r\n    height : 100% ;\r\n\r\n    background-image : url(${props => props.url}) ;\r\n    background-repeat : no-repeat ;\r\n    background-size : cover ;\r\n`;\r\n\r\nconst Input = styled.input`\r\n\r\n`;\r\n\r\nconst Form = styled.form`\r\n    \r\n`;\r\n\r\nconst Button = styled.button`\r\n    all : unset ;\r\n\r\n    font-size : 14px ;\r\n    font-weight : 550 ;\r\n\r\n    border-radius : 15px ;\r\n\r\n    padding : 4px 8px ;\r\n    margin : 2px 4px ;\r\n\r\n    background-color : #1de9b6 ;\r\n`;\r\n\r\nconst ImageContent = styled.div`\r\n    overflow : hidden ; \r\n    text-overflow : ellipsis ; \r\n    white-space : nowrap ;\r\n`;\r\n\r\nconst Msg = styled.div`\r\n\r\n    width : 100% ;\r\n    height : 100% ;\r\n    \r\n    font-size : 22px ;\r\n    font-weight : 600 ;\r\n    color : #b71c1c ;\r\n\r\n    display : flex ;\r\n\r\n    justify-content : center ;\r\n    align-items : center ;\r\n    \r\n`;\r\n\r\nconst Image = () => {\r\n\r\n    const [ imageList, setImageList ] = useState([]) ;\r\n    const [ selectUrl, setSelectUrl ] = useState('') ;\r\n\r\n    const { \r\n        file : img, \r\n        url : imgUrl, \r\n        onChange : imgOnChange \r\n    } = useInputImg('') ; \r\n\r\n    useEffect(() => {\r\n        async function getImgList() {\r\n\r\n            try {\r\n                const {\r\n                    data : { \r\n                        images\r\n                    }\r\n                } = await axiosApi.getImgList() ;\r\n\r\n                setImageList(images) ;\r\n            }catch {\r\n\r\n            }\r\n        }\r\n\r\n        getImgList() ;\r\n\r\n\r\n        return () => {\r\n            setSelectUrl('') ;\r\n            setImageList([]) ;\r\n        }\r\n\r\n    }, []) ;\r\n\r\n    async function onSubmitImage(e) {\r\n        e.preventDefault() ;\r\n\r\n        const formData = new FormData() ;\r\n\r\n        formData.append('file', img) ;\r\n\r\n        try {\r\n            const { \r\n                data \r\n            } = await axiosApi.addImg(formData) ;\r\n\r\n            setImageList(imageList.concat(data)) ;\r\n        }catch {\r\n            \r\n\r\n        }finally {\r\n            \r\n        }\r\n    }\r\n\r\n    function onClickImage(e) {\r\n        setSelectUrl(e.currentTarget !== e.target ? \r\n            imageList[imageList.findIndex(image => image.url === e.target.innerHTML)]\r\n            : null\r\n        ) ;\r\n    }\r\n\r\n    async function onDeleteImg(e) {\r\n\r\n        if(selectUrl !== null) {\r\n            try {\r\n                const { data } = await axiosApi.deleteImg(selectUrl.id) ;\r\n                if(data) {\r\n                    const id = imageList.findIndex(image => image.id === selectUrl.id) ;\r\n                    setImageList([\r\n                        ...imageList.slice(0, id),\r\n                        ...imageList.slice(id + 1, imageList.length)\r\n                    ]) ;\r\n                }\r\n            }catch {\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    function onClickImageContent(e) {\r\n\r\n        const node = e.target ;\r\n        const text = node.innerHTML ;\r\n\r\n        const createInput = document.createElement('input') ;\r\n        createInput.setAttribute('type', 'text') ;\r\n\r\n        node.appendChild(createInput) ;\r\n\r\n        createInput.value = text ;\r\n        \r\n        createInput.select() ;\r\n        document.execCommand('copy') ;\r\n\r\n        node.removeChild(createInput) ;\r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <ImageListContainer onClick={onClickImage}>\r\n                {imageList && imageList.map((content, index) => \r\n                    <ImageContent onClick={onClickImageContent} key={index}>\r\n                        {content.url}\r\n                    </ImageContent>\r\n                )}\r\n            </ImageListContainer>\r\n            <InputContainer>\r\n            <ImagePreviewContainer>\r\n                {selectUrl ? \r\n                    (<ImagePreview src={selectUrl && selectUrl.url} />) : (<Msg>선택된 이미지 없음</Msg>) }\r\n                <Button onClick={onDeleteImg}>삭제</Button>\r\n            </ImagePreviewContainer>\r\n            <Form onSubmit={onSubmitImage} action=\"POST\">\r\n                <Input\r\n                     name=\"file\"\r\n                     type=\"file\"\r\n                     accept='image/jpg, image/png, image/jpeg, image/gif'\r\n                     onChange={imgOnChange}\r\n                     required\r\n                />\r\n                <Button type=\"submit\">이미지 추가</Button>\r\n            </Form>\r\n            </InputContainer>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Image ;",["174","175"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\GlobalStyle.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Write.js",["176"],"import React, { useState } from 'react' ;\r\nimport styled from 'styled-components' ;\r\n\r\nimport Content from '../Components/Blog/Content' ;\r\n\r\nimport MDEditor from '@uiw/react-md-editor' ;\r\nimport { axiosApi } from '../Util/api' ;\r\n\r\nimport Image from '../Components/Me/Image' ;\r\nimport { Redirect } from 'react-router-dom' ;\r\n\r\nimport { DOCUMENT } from '../Util/routes' ;\r\nimport Helmet from 'react-helmet' ;\r\n\r\nconst Container = styled.div`\r\n    \r\n`;\r\n\r\nconst Header = styled.div`\r\n    width : 100% ;\r\n    height : 500px ;\r\n    overflow : hidden ;\r\n\r\n    display : ${props => props.display} ;\r\n    align-items : center ;\r\n    justify-content : center ;\r\n\r\n\r\n    @media ${props => props.theme.laptop} {\r\n        height : 300px ;\r\n    }\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n    display : flex ;\r\n\r\n    flex-direction: column ;\r\n\r\n    width : 30% ;\r\n`;\r\n\r\nconst PreviewContainer = styled.div`\r\n    width : 40% ;\r\n\r\n    display : flex ;\r\n    align-items : center ;\r\n    justify-content : center ;\r\n`;\r\n\r\nconst Title = styled.input`\r\n    all : unset ;\r\n    \r\n    width : 300px ;\r\n    height : 25px ;\r\n\r\n    border : 2px solid ${props => props.status} ;\r\n    \r\n    font-size : 16px ;\r\n    padding-left : 7px ;\r\n`;\r\n\r\nconst Language = styled.select`\r\n    all : unset ;\r\n\r\n    width : 300px ;\r\n    height : 25px ;\r\n\r\n    line-height : 25px ;\r\n\r\n    background-image : url(${props => props.url}) ;\r\n    background-size : 30px 30px ;\r\n    background-repeat : no-repeat ;\r\n    background-position : 280px -1px ;\r\n\r\n    border : 2px solid ${props => props.status} ;\r\n    \r\n    font-size : 16px ;\r\n    padding-left : 7px ;\r\n`;\r\n\r\nconst LanguageOption = styled.option`\r\n    all : unset ;\r\n`;\r\n\r\nconst ImgInput = styled.input`\r\n    all : unset ;\r\n\r\n    width : 300px ;\r\n    height : 25px ;\r\n\r\n    line-height : 26px ;\r\n\r\n    border : 2px solid ${props => props.status} ;\r\n\r\n    font-size : 14px ;\r\n    padding-right : 7px ;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    &:not(:first-child) {\r\n        margin-top : 10px ;\r\n    }\r\n    &:not(:last-child) {\r\n        margin-bottom : 10px ;\r\n    }\r\n`;\r\n\r\nconst Main = styled.main`\r\n\r\n`;\r\n\r\nconst FixdMenu = styled.div`\r\n    position : fixed ;\r\n    \r\n    bottom : 20px ;\r\n    right : 20px ;\r\n\r\n    display : flex ;\r\n    align-items : center ;\r\n    justify-content : center ;\r\n\r\n`;\r\n\r\nconst Menu = styled.div`\r\n\r\n    box-sizing : content-box ;\r\n    height : 25px ;\r\n    \r\n    border : 1px solid #111 ;\r\n\r\n    font-size : 14px ;\r\n    font-weight : 600 ;\r\n\r\n    padding : 5px 10px ;\r\n\r\n    user-select : none ;\r\n    cursor : pointer ;\r\n\r\n    display : flex ;\r\n    justify-content : center ;\r\n    align-items : center ;\r\n\r\n    &:not(:last-child) {\r\n        margin-right : 5px ;\r\n    }\r\n`;\r\n\r\nconst FixedMorkDown = styled.div`\r\n\r\n    width : 800px ;\r\n\r\n    margin : 0 auto ;\r\n    display : ${props => props.display} ;\r\n`;\r\n\r\nconst ImageListContainer = styled.div`\r\n    display : ${props => props.display} ;\r\n`;\r\n\r\nconst Write = () => {\r\n    const [ title, setTitle ] = useState('') ;\r\n    const [ html, setHTML ] = useState('') ;\r\n    const [ type, setType ] = useState('') ;\r\n    const [ imageUrl, setImageUrl] = useState('') ;\r\n\r\n    const [ htmlWriter, setHtmlWriter ] = useState(false) ;\r\n    const [ preview, setPreview ] = useState(false) ;\r\n    const [ ImageView, setImageView ] = useState(false) ;\r\n\r\n    const [ pageState, setPageState ] = useState(true) ;\r\n\r\n    async function onSubmitImage(e) {\r\n        e.preventDefault() ;\r\n\r\n\r\n        const contentFormData = new FormData() ;\r\n        contentFormData.append('title', title) ;\r\n        contentFormData.append('text', html) ;\r\n        contentFormData.append('type', type) ;\r\n        contentFormData.append('image_url', imageUrl) ;\r\n\r\n        const data = await axiosApi.createContent(contentFormData) ;\r\n\r\n        setPageState(!pageState) ;\r\n    }\r\n\r\n    function onChangeType(e) {\r\n        setType(e.target.value) ;\r\n    }\r\n\r\n    function onChangeTitle(e) {\r\n        setTitle(e.target.value) ;\r\n    }\r\n\r\n    function onViewHtml(e) {\r\n        setHtmlWriter(htmlWriter ? false : true) ;\r\n    }\r\n\r\n    function onViewPreview(e) {\r\n        setPreview(preview ? false : true) ;\r\n    }\r\n\r\n    function onViewImage(e) {\r\n        setImageView(ImageView ? false :  true) ;\r\n    }\r\n\r\n    function onImageUrl(e) {\r\n        setImageUrl(e.target.value) ;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Code beginner | Write</title>\r\n            </Helmet>\r\n        { pageState ? (\r\n            <Container>\r\n                <Header display={preview ? 'flex' : 'none'}>\r\n                    <InputContainer>\r\n                        <Label name=\"title\">제목</Label>\r\n                        <Title \r\n                            type=\"text\" \r\n                            name=\"title\" \r\n                            value={title} \r\n                            onChange={onChangeTitle} \r\n                            required\r\n                            status={title.length >= 1 ? 'blue' : 'red'}\r\n                        />\r\n                        <Label name=\"type\">타입</Label>\r\n                        <Language\r\n                            type=\"text\"\r\n                            name=\"type\"\r\n                            value={type}\r\n                            onChange={onChangeType}\r\n                            status={type ? 'blue' : 'red'}\r\n                            url={require(\"../assets/select_arrow.PNG\").default}\r\n                        >\r\n                            <LanguageOption value=\"\">--Select Type--</LanguageOption>\r\n                            <LanguageOption value=\"JS\">JS</LanguageOption>\r\n                            <LanguageOption value=\"HTML\">HTML</LanguageOption>\r\n                            <LanguageOption value=\"CSS3\">CSS</LanguageOption>\r\n                            <LanguageOption value=\"React\">React</LanguageOption>\r\n                            <LanguageOption value=\"일상\">일상</LanguageOption>\r\n                            <LanguageOption value=\"이모저모\">이모저모</LanguageOption>\r\n                            <LanguageOption value=\"여행기\">여행기</LanguageOption>\r\n                        </Language>\r\n                        <Label name=\"file\">이미지 파일</Label>\r\n                        <ImgInput \r\n                            name=\"file\"\r\n                            type=\"text\"\r\n                            onChange={onImageUrl}\r\n                            required\r\n                            status={imageUrl ? 'blue' : 'red'}\r\n                        />\r\n                    </InputContainer>\r\n                    <PreviewContainer>\r\n                        { \r\n                            <Content \r\n                                content={{\r\n                                    title,\r\n                                    type : type,\r\n                                    image_url : imageUrl,\r\n                                }}\r\n                            /> \r\n                        }\r\n                    </PreviewContainer>\r\n                </Header>\r\n                <Main>\r\n                    <ImageListContainer display={ImageView ? 'block' : 'none'}>\r\n                        <Image />\r\n                    </ImageListContainer>\r\n                    <FixedMorkDown\r\n                        display={htmlWriter ? 'block' : 'none' }\r\n                    >\r\n                        <MDEditor\r\n                            value={html}\r\n                            onChange={setHTML}\r\n                        />\r\n                    </FixedMorkDown>\r\n                    <MDEditor.Markdown source={html || null} />\r\n                </Main>\r\n                <FixdMenu>\r\n                    <Menu onClick={onViewPreview}>개시글 컨텐츠</Menu>\r\n                    <Menu onClick={onViewHtml}>HTML</Menu>\r\n                    <Menu onClick={onViewImage}>이미지</Menu>\r\n                    <Menu onClick={onSubmitImage}>작성</Menu>\r\n                </FixdMenu>\r\n            </Container>) : (\r\n                <Redirect to={DOCUMENT} />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Write ;",["177","178"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\api.js",[],["179","180"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Profile.js",["181","182"],"import React, { useState, useEffect } from 'react' ;\r\nimport styled from 'styled-components' ;\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome' ;\r\nimport { faFacebookF, faGithub, faInstagram } from '@fortawesome/free-brands-svg-icons' ;\r\n\r\nimport { axiosApi } from '../Util/api' ;\r\nimport { withCookies } from 'react-cookie';\r\n\r\nimport { size } from '../Util/theme' ;\r\nimport Helmet from 'react-helmet' ;\r\n\r\nconst Container = styled.div`\r\n    width : 100% ;\r\n\r\n    padding : 70px 0 ;\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        padding : 20px 0 ;\r\n    }\r\n`;\r\n\r\nconst MyContainer = styled.div`\r\n\r\n    width : 60% ;\r\n    height : 580px ;\r\n\r\n    margin : 0 auto ;\r\n\r\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23) ;\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        width : 100% ;\r\n        height : 300px ;\r\n    }\r\n`;\r\n\r\nconst MainContainer = styled.div`\r\n    width : 100% ;\r\n    height : 100% ;\r\n    \r\n    overflow : hidden ;\r\n`;\r\n\r\nconst Main = styled.div`\r\n    height : 87% ;\r\n    float : left ;\r\n`;\r\n\r\nconst Main1 = styled(Main)`\r\n    width : 50% ;\r\n`;\r\n\r\nconst Main2 = styled(Main)`   \r\n    \r\n    width : 50% ;\r\n\r\n    border-left : 1px solid #111 ;\r\n`;\r\n\r\nconst Footer = styled.ul`\r\n    width : 100% ;\r\n    height : 13% ;\r\n\r\n    border-top : 1px solid #111 ;\r\n    float : left ;\r\n\r\n    display : flex ;\r\n\r\n    justify-content : center ;\r\n    align-items : center ;\r\n`;\r\n\r\nconst IconBox = styled.li`\r\n    width : 50px ;\r\n    &:not(:last-child) {\r\n        margin-right : 20px ;\r\n    }\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        width : 30px ;\r\n    }\r\n`;\r\n\r\nconst Icon = styled(FontAwesomeIcon)`\r\n\r\n    box-sizing : content-box ;\r\n    cursor : pointer ;\r\n    font-size : 28px ;\r\n\r\n    transition : 0.3 font-size ease-in ;\r\n\r\n    &:hover {\r\n        font-size : 32px ;\r\n    }\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        font-size : 18px ;\r\n        &:hover {\r\n        }\r\n    }\r\n`;\r\n\r\nconst MyImg = styled.div`\r\n    width : 100% ;\r\n    height : 100% ;\r\n`;\r\n\r\nconst MyIntroduction = styled.ul`\r\n    padding-right : 30px ;\r\n    margin-top : 10% ;\r\n    margin-left : 18% ;\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        padding-right : 0 ;\r\n        margin-left : 8% ;\r\n    }\r\n`;\r\n\r\nconst MyIntroductionLi = styled.li`\r\n    &:not(:last-child) {\r\n        margin-bottom : 50px ;\r\n    }\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        &:not(:last-child) {\r\n            margin-bottom : 10px ;\r\n        }\r\n    }\r\n`;\r\n\r\nconst TitleText = styled.span`\r\n    display : inline-block ;\r\n\r\n    font-size : 22px ;\r\n\r\n    padding-bottom : 8px ;\r\n\r\n    &:not(:last-child) {\r\n        margin-bottom : 14px ;\r\n        padding-bottom : 3px ;\r\n    }\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        font-size : 15px ;\r\n\r\n        padding-bottom : 3px ;\r\n\r\n        &:not(:last-child) {\r\n            margin-bottom : 3px ;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Text = styled.span`\r\n    display : inline-block ;\r\n\r\n    padding-bottom : 8px ;\r\n\r\n    font-weight : 550 ;\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        font-size : 10px ;\r\n        padding-bottom : 3px ;\r\n    }\r\n`;\r\n\r\nconst Content = styled.span`\r\n    @media ${props => props.theme.mobileS} {\r\n        font-size : 6px ;\r\n    }\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n    \r\n    width : 60% ;\r\n    \r\n    margin : 0 auto ;\r\n\r\n    margin-top : 100px ;\r\n\r\n    display : ${props => props.display} ;\r\n    justify-content : center ;\r\n    align-items : center ;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    display : flex ;\r\n\r\n    flex-direction : column ;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all : unset ;\r\n\r\n    width : 250px ;\r\n    height : 35px ;\r\n\r\n    border : 1px solid #111 ;\r\n    border-radius : 10px ;\r\n\r\n    padding-left : 5px ; \r\n    \r\n`;\r\n\r\nconst Label = styled.label`\r\n    padding : 10px 0 10px 5px ;\r\n`;\r\n\r\nconst LoginButton = styled.button`\r\n    all : unset ;\r\n\r\n    margin-top : 50px ;\r\n    margin-left : 50px ;\r\n\r\n    width : 150px ;\r\n    height : 30px ;\r\n\r\n    border : 1px solid #111 ;\r\n    border-radius : 10px ;\r\n\r\n    text-align : center ; \r\n`;\r\n\r\nconst Profile = ({ cookies }) => {\r\n\r\n    const [ email, setEmail ] = useState('') ;\r\n    const [ pw, setPw ] = useState('') ;\r\n    const [ login, setLogin ] = useState(false) ;\r\n\r\n    const [ showLogin, setShowLogin ] = useState(true) ;\r\n\r\n    const { mobileS } = size ;\r\n\r\n    const viewContentNumCheck = innerWidth => {\r\n        if( innerWidth <= mobileS ) {\r\n            setShowLogin(false) ;\r\n        }else if( innerWidth > mobileS ) {\r\n            setShowLogin(true) ;\r\n        }\r\n      }\r\n\r\n    const onResize = (e) => {\r\n        const { currentTarget : { innerWidth } } = e ;\r\n\r\n        viewContentNumCheck(innerWidth) ;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const { innerWidth } = window ;\r\n\r\n        viewContentNumCheck(innerWidth) ;\r\n    \r\n        window.addEventListener('resize', onResize, false) ;\r\n    \r\n        return () => {\r\n          window.removeEventListener('resize', onResize, false) ;\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const token = cookies.get('token') ;\r\n\r\n        if(token) {\r\n            setLogin(true) ;\r\n        }else {\r\n            setLogin(false) ;\r\n        }\r\n    }) ;\r\n\r\n    function onChange(e) {\r\n        switch(e.target.name) {\r\n            case 'email' :\r\n                return setEmail(e.target.value) ;\r\n            case 'password' :\r\n                return setPw(e.target.value) ;\r\n            default :\r\n                return console.log('onChange 함수를 변경하세요') ;\r\n        }\r\n    }\r\n\r\n    async function onLogin(e) {\r\n        e.preventDefault() ;\r\n\r\n        const userData = new FormData() ;\r\n        userData.append('email', email) ;\r\n        userData.append('password', pw) ;\r\n\r\n        try {\r\n            const { \r\n                data : { \r\n                    Authorization \r\n                } \r\n            } = await axiosApi.login(userData) ;\r\n\r\n            if(Authorization) {\r\n                cookies.set('token', Authorization) ;\r\n                setLogin(true) ;\r\n            }\r\n\r\n        }catch {\r\n\r\n        }\r\n\r\n        return ;\r\n    }\r\n\r\n    async function onLogout(e) {\r\n        e.preventDefault() ;\r\n\r\n        const token = cookies.get('token') ;\r\n\r\n        const logoutData = new FormData() ;\r\n\r\n        try {\r\n            const { \r\n                data : { \r\n                    status \r\n                } \r\n            } = await axiosApi.logout(logoutData, token) ;\r\n\r\n            if(status === \"success\") {\r\n                cookies.remove('token') ;\r\n                setLogin(false) ;\r\n                setEmail('') ;\r\n                setPw('') ;\r\n            }\r\n        }catch {\r\n            \r\n        }\r\n\r\n        return ;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Code beginner | Profile</title>\r\n            </Helmet>\r\n            <Container>\r\n                <MyContainer>\r\n                    <MainContainer>\r\n                        <Main1>\r\n                            <MyImg />\r\n                        </Main1>\r\n                        <Main2>\r\n                            <MyIntroduction>\r\n                                <MyIntroductionLi>\r\n                                    <TitleText>김희수</TitleText><br/>\r\n                                    <Content>Front Programer</Content>\r\n                                </MyIntroductionLi>\r\n                                <MyIntroductionLi>\r\n                                    <Text>전화번호</Text><br/>\r\n                                    <Content>010-5293-8620</Content>\r\n                                </MyIntroductionLi>\r\n                                <MyIntroductionLi>\r\n                                    <Text>이메일</Text><br/>\r\n                                    <Content>rlagmltn456@naver.com</Content>\r\n                                </MyIntroductionLi>\r\n                                <MyIntroductionLi>\r\n                                    <Text>주소</Text><br/>\r\n                                    <Content>대구 광역시 수성구</Content>\r\n                                </MyIntroductionLi>\r\n                                <MyIntroductionLi>\r\n                                    <Text>홈페이지</Text><br/>\r\n                                    <Content>http://127.0.0.1</Content>\r\n                                </MyIntroductionLi>\r\n                            </MyIntroduction>\r\n                        </Main2>\r\n                        <Footer>\r\n                            <IconBox>\r\n                                <Icon icon={faFacebookF} color=\"#111\" />\r\n                            </IconBox>\r\n                            <IconBox>\r\n                                <Icon icon={faGithub} color=\"#111\" />\r\n                            </IconBox>\r\n                            <IconBox>\r\n                                <Icon icon={faInstagram} color=\"#111\" />\r\n                            </IconBox>\r\n                        </Footer>\r\n                    </MainContainer>\r\n                </MyContainer>\r\n                <LoginContainer display={showLogin ? 'flex' : 'none'}>\r\n                    <Form onSubmit={ login ? onLogout : onLogin} action=\"POST\">\r\n                    {login ? null : ( \r\n                            <>\r\n                                <Label name=\"email\">아이디</Label>\r\n                                <Input \r\n                                    type=\"text\"\r\n                                    name=\"email\" \r\n                                    value={email} \r\n                                    onChange={onChange}\r\n                                />\r\n                                <Label name=\"password\">비밀번호</Label>\r\n                                <Input \r\n                                    type=\"password\" \r\n                                    name=\"password\"\r\n                                    value={pw} \r\n                                    onChange={onChange}\r\n                                />\r\n                            </>\r\n                            ) }\r\n                        <LoginButton type=\"submit\">{ login ? \"로그아웃\" : \"로그인\"}</LoginButton>\r\n                    </Form> \r\n                </LoginContainer>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withCookies(Profile) ;","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Header.js",["183"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\Content.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\BlogPage.js",["184","185","186"],"import React, { useState, useEffect } from 'react' ;\r\nimport styled from 'styled-components' ;\r\n\r\nimport MDEditor from '@uiw/react-md-editor' ;\r\nimport { connect } from 'react-redux';\r\n\r\nimport ButtonContainer from '../Components/Blog/ButtonContainer' ;\r\nimport BlogPageContainer from '../Components/Blog/BlogPageContainer' ;\r\n\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n\r\nimport {\r\n    DOCUMENT\r\n} from '../Util/routes' ;\r\nimport CommentContainer from '../Components/Blog/CommentContainer';\r\nimport { blogPageContentNum } from '../Util/util';\r\nimport { createAction } from '../Store/store';\r\n\r\nconst Container = styled.div`\r\n    width : 100% ;\r\n    \r\n    overflow : hidden ;\r\n`;\r\n\r\nconst Main = styled.div`\r\n    width : 100% ;\r\n\r\n    float : left ;\r\n\r\n    padding : 50px 20px ;\r\n`;\r\n\r\nconst ContentBox = styled.div`\r\n    \r\n`;\r\n\r\nconst Footer = styled.div`\r\n    width : 100% ;\r\n\r\n    float : left ;\r\n`;\r\n\r\nconst ButtonWrap = styled.div`\r\n    margin-top : 40px ;\r\n`;\r\n\r\nconst CommentWrap= styled.div`\r\n    width : 100% ;\r\n`;\r\n\r\nconst BlogPage = ({ pageContents, pageSelect, text, id, pageContentsPotition, updatePageSelect }) => {\r\n\r\n    useEffect(() => {\r\n        updatePageSelect(pageContentsPotition) ;\r\n    }, []) ;\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Main>\r\n                    <MDEditor.Markdown source={ text } />\r\n                </Main>\r\n                <Footer>\r\n                    <ContentBox>\r\n                    { pageContents && pageContents.map((content, index) => {\r\n                        return pageSelect === index ? (\r\n                            <BlogPageContainer \r\n                                key={index}\r\n                                pageContents={content}\r\n                                pageSelect={true}\r\n                            />\r\n                        ) : (\r\n                            <BlogPageContainer \r\n                                key={index}\r\n                                pageContents={content}\r\n                            />\r\n                        )\r\n                    })}\r\n                    </ContentBox>\r\n                    <ButtonWrap>\r\n                        <ButtonContainer />\r\n                    </ButtonWrap>\r\n                    <CommentWrap>\r\n                        <CommentContainer contentId={id} />\r\n                    </CommentWrap>\r\n                </Footer>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state, stateAll) {\r\n\r\n    const { \r\n        content : {\r\n            pageContents, pageSelect, defaultData, pageButtonsData\r\n        }\r\n    } = state ;\r\n\r\n    const {\r\n        location : {\r\n            pathname\r\n        }\r\n    } = stateAll ;\r\n\r\n    const findId = pathname.replace(`${DOCUMENT}/`, \"\") ;\r\n\r\n    const id = defaultData.findIndex(content => content.id === Number(findId)) ;\r\n    const content = defaultData[id] ;\r\n\r\n    let position ;\r\n\r\n    pageButtonsData.forEach(buttons => {\r\n        if(buttons * blogPageContentNum <= id && id <= (buttons + 1) * blogPageContentNum)\r\n            position = buttons ;\r\n    }) ;\r\n\r\n    return {\r\n        pageContents,\r\n        pageSelect,\r\n        text : content ? content.text : \"\",\r\n        id : content ? content.id : -1,\r\n        pageContentsPotition : position \r\n    } ;\r\n} ;\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updatePageSelect : select => dispatch(createAction.updatePageSelect(select))\r\n    }\r\n} ;\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BlogPage)) ;",["187","188"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Project.js",[],["189","190"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Project\\ProjectContent.js",["191"],"import React, { useState, useEffect } from 'react' ;\r\nimport styled from 'styled-components' ;\r\n\r\nimport { size } from '../../Util/theme' ;\r\n\r\nconst Container = styled.div`\r\n\r\n    float : left ;\r\n\r\n    width : 80% ;\r\n    overflow : hidden ;\r\n\r\n    &:nth-child(2n) {\r\n        margin-left : 9.5% ;\r\n\r\n        @media ${props => props.theme.tabletS} {\r\n            margin-left : 14.5% ;\r\n        }\r\n        @media ${props => props.theme.mobileS} {\r\n            margin-left : 0 ;\r\n        }\r\n    }\r\n    &:nth-child(2n - 1) {\r\n        margin-left : 9.5% ;\r\n\r\n        @media ${props => props.theme.tabletS} {\r\n            margin-left : 14.5% ;\r\n        }\r\n        @media ${props => props.theme.mobileS} {\r\n            margin-left : 0 ;\r\n        }\r\n    }\r\n\r\n    @media ${props => props.theme.tabletS} {\r\n        width : 70% ;\r\n    }\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        width : 100% ;\r\n    }\r\n`;\r\n\r\nconst Img = styled.div`\r\n    width : 100% ;\r\n    height : 270px ;\r\n\r\n    float : left ;\r\n\r\n    background-image : url(${props => props.src}) ;\r\n\r\n    background-size : cover ;\r\n    background-repeat : no-repeat ;\r\n    background-position : 0 0 ;\r\n\r\n    @media ${props => props.theme.laptop} {\r\n        height : 260px ;\r\n    }\r\n    @media ${props => props.theme.mobileL} {\r\n        height : 180px ;\r\n    }\r\n    @media ${props => props.theme.mobileS} {\r\n        height : 140px ;\r\n    }\r\n`;\r\n\r\nconst TextContainer = styled.div`\r\n    position : relative ;\r\n    width : 100% ;\r\n\r\n    float : left ;\r\n    overflow : hidden ;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n    width : 100% ;\r\n    float : flex ;\r\n`;\r\n\r\nconst Title = styled.h5`\r\n    box-sizing : content-box ;\r\n\r\n    font-size : 17px ;\r\n\r\n    overflow : hidden ;\r\n    text-overflow : ellipsis ; \r\n    white-space : nowrap ;\r\n\r\n    user-select : none ;\r\n\r\n    text-align : center ;\r\n\r\n    padding : 6px 2px 0 2px ;\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        font-size : 15px ;\r\n    }\r\n\r\n`;\r\n\r\nconst DateContainer = styled.div`\r\n    width : 100% ;\r\n\r\n    text-align : center ;\r\n`;\r\n\r\nconst Date = styled.span`\r\n    \r\n    display : inline-block ;\r\n\r\n    padding : 10px 1px 6px 1px ;\r\n    font-size : 12px ;\r\n\r\n    user-select : none ;\r\n\r\n    @media ${props => props.theme.mobileL} {\r\n        font-size : 10px ;\r\n    }\r\n    @media ${props => props.theme.mobileS} {\r\n        font-size : 8px ;\r\n    }\r\n`;\r\n\r\nconst Description = styled.p`\r\n    display : inline-block ;\r\n    \r\n    padding : 30px 5px 0 5px ;\r\n\r\n    line-height : 18px ;\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        padding : 5px 10px ;\r\n        line-height : 15px ;\r\n    }\r\n`;\r\n\r\nconst DescriptionContainer  = styled.div`\r\n    width : inherit ;\r\n    height : inherit ;\r\n    \r\n    display : ${props => props.display} ;\r\n    color : #fff ;\r\n\r\n    background-color : rgba(0, 0, 0, 0.85) ;\r\n\r\n    font-size : 13px ;\r\n\r\n    padding : 20px 10px ;\r\n\r\n    align-items : center ;\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        padding : 5px 3px ;\r\n        font-size : 11px ;\r\n        color : #111 ;\r\n        \r\n        background-color : #fff ;\r\n    }\r\n`;\r\n\r\nconst ProjectContent = ({ content }) => {\r\n    \r\n    const { mobileS } = size ;\r\n    const { image, period, title, url, description } = content ;\r\n\r\n    const [ display, setDisplay ] = useState(false) ;\r\n    const [ showDescription, setShowDescription ] = useState(false) ;\r\n\r\n    const viewContentNumCheck = innerWidth => {\r\n        if(innerWidth <= mobileS) {\r\n            setShowDescription(true) ;       \r\n        }else if( innerWidth > mobileS ) {\r\n            setShowDescription(false) ;\r\n        }\r\n      }\r\n    \r\n      const onResize = (e) => {\r\n        const { currentTarget : { innerWidth } } = e ;\r\n    \r\n        viewContentNumCheck(innerWidth) ;\r\n      }\r\n    \r\n      useEffect(() => {\r\n    \r\n        const { innerWidth } = window ;\r\n    \r\n        viewContentNumCheck(innerWidth) ;\r\n    \r\n        window.addEventListener('resize', onResize, false) ;\r\n    \r\n        return () => {\r\n          window.removeEventListener('resize', onResize, false) ;\r\n        }\r\n      }, [])\r\n\r\n    function onClickContent() {\r\n        window.location.href = url ;\r\n    }\r\n\r\n    function imgMouseOver(e) {\r\n\r\n        return display ? null :  setDisplay(true) ;\r\n    }\r\n\r\n    function descriptionContainerMouseLeave(e) {\r\n\r\n        return display ? setDisplay(false) : null ;\r\n    }\r\n\r\n    return (\r\n        <Container onClick={onClickContent}>\r\n            <Img \r\n                src={image} \r\n                onMouseOver={ showDescription ? null : imgMouseOver} \r\n            >\r\n                {showDescription ? null : (<DescriptionContainer\r\n                    display={display || showDescription ? 'flex' : 'none' } \r\n                    onMouseLeave={ showDescription ? null :descriptionContainerMouseLeave}\r\n                >\r\n                    <Description>\r\n                        { description }\r\n                    </Description>\r\n                </DescriptionContainer>)}\r\n            </Img>\r\n            <TextContainer>\r\n                <TitleContainer>\r\n                    <Title draggable=\"false\">{title}</Title>\r\n                </TitleContainer>\r\n                <DateContainer>\r\n                    <Date draggable=\"false\">{period}</Date>\r\n                </DateContainer>\r\n            </TextContainer>\r\n            {showDescription ? (<DescriptionContainer\r\n                    display={display || showDescription ? 'flex' : 'none' } \r\n                    onMouseLeave={ showDescription ? null :descriptionContainerMouseLeave}\r\n                >\r\n                    <Description>\r\n                        { description }\r\n                    </Description>\r\n                </DescriptionContainer>) : null}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ProjectContent;","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\BlogRouter.js",[],["192","193"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\AsideContent.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Blog.js",[],["194","195"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\BlogContainer.js",["196","197"],"import React, { useEffect, useState } from 'react' ;\r\nimport styled from 'styled-components' ;\r\n\r\nimport Content from './Content' ;\r\n\r\nconst Container = styled.div`\r\n    width : 100% ;\r\n    \r\n    display : ${props => props.display} ;\r\n    \r\n    grid-template-columns : repeat(3, 33.33%) ;\r\n    grid-row-gap : 50px ;\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        grid-template-columns : repeat(1, 100%) ;\r\n        grid-row-gap : 40px ;\r\n\r\n        margin-bottom : 30px ;\r\n    }\r\n`;\r\n\r\nconst BlogContainer = ({ content, select, error }) => {\r\n\r\n    return (\r\n            <Container\r\n                display={select ? 'grid' : 'none' }\r\n            >  \r\n                { content && content.map((content, index) => (\r\n                    <Content \r\n                        key={index}\r\n                        content={content}\r\n                    />\r\n                )) }\r\n            </Container>\r\n    );\r\n};\r\n\r\nexport default BlogContainer;",["198","199"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\App.js",["200"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Menu.js",[],["201","202"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Home\\LanguageContent.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Home\\UseLanguage.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\AsideMenu.js",["203","204"],"import React, { useEffect, useState } from 'react' ;\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components' ;\r\n\r\nimport AsideContent from './AsideContent' ;\r\nimport { createAction } from '../../Store/store' ;\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome' ;\r\nimport { faSearch, faAlignJustify } from '@fortawesome/free-solid-svg-icons' ;\r\nimport { Link } from 'react-router-dom';\r\nimport { DOCUMENT } from '../../Util/routes';\r\n\r\nimport { size } from '../../Util/theme' ;\r\n\r\nconst Container = styled.div`\r\n    width : 100% ;\r\n\r\n    display : ${props => props.display} ;\r\n\r\n    font-family: 'Ubuntu', sans-serif ;\r\n\r\n    padding : 15px 5px ;\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        position : fixed ;\r\n        width : 30% ;\r\n        top : 40px ;\r\n        left : 0 ;\r\n\r\n        z-index : 99 ;\r\n\r\n        padding : 3px 0 3px 5px ;\r\n\r\n        border-top-right-radius : 20px ;\r\n        border-bottom-right-radius : 20px ;\r\n\r\n        background-color : #111 ;\r\n\r\n        opacity : 0.9 ;\r\n    }\r\n`;\r\n\r\nconst BigAsideMenuContainer = styled.ul`\r\n    width : 100% ;\r\n    float : left ;\r\n`;\r\n\r\nconst AllDataViewButton = styled.div`\r\n    width : 80% ;\r\n\r\n    float : left ;\r\n\r\n    text-align : center ;\r\n    margin-top : 30px ;\r\n    font-size : 16px ;\r\n    font-weight : 550 ;\r\n\r\n    padding : 20px 10px 20px 10px ;\r\n\r\n    color : #9e9e9e ;\r\n\r\n    user-select : none ;\r\n    cursor : pointer ;\r\n\r\n    &:hover { \r\n        background-color : #e8eaf6 ;\r\n        color : #3949ab ;\r\n    }\r\n\r\n    @media ${props => props.theme.laptop} {\r\n        font-size : 12px ;\r\n        margin-left : 5px ;\r\n\r\n    }\r\n    @media ${props => props.theme.mobileS} {\r\n        font-size : 8px ;\r\n        padding : 10px 6px 10px 6px ;\r\n        margin-top : 10px ;\r\n        color : #e0e0e0 ;\r\n\r\n        &:hover {\r\n            background-color : inherit ;\r\n            color : #e0e0e0 ;\r\n        }\r\n    }\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n    float : left ;\r\n\r\n    width : 100% ;\r\n\r\n    display : flex ;\r\n    \r\n    align-items : center ;\r\n    overflow : hidden ;\r\n`;\r\n\r\nconst StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n    font-size : 16px ;\r\n\r\n    color : #9e9e9e ;\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        font-size : 10px ;\r\n    }\r\n`;\r\n\r\nconst StyledFontAwesomeIconMenu = styled(FontAwesomeIcon)`\r\n\r\n    display : ${props => props.display} ;\r\n    position : fixed ;\r\n\r\n    font-size : 18px ;\r\n    \r\n    z-index : 100;\r\n    top : 11px ;\r\n    left : 11px ;\r\n\r\n    color : #fff ;\r\n`;\r\n\r\nconst FontAwesomeIconContainer = styled.div`\r\n    position : absolute ;\r\n    top : 13px ;\r\n    right : 4px ;\r\n\r\n    z-index : 10 ;\r\n\r\n    cursor : pointer ;\r\n\r\n    &:hover {\r\n        ${StyledFontAwesomeIcon} {\r\n            color : #3949ab ;\r\n        }\r\n    }\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        top : 0px ;\r\n        right : 0px ;\r\n    }\r\n`;\r\n\r\nconst Form = styled.form`\r\n    float : left ;\r\n\r\n    position : relative ;\r\n\r\n    width : 200px ;\r\n    height : 40px ;\r\n\r\n    font-family: 'Ubuntu', sans-serif ;\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        width : 80px ;\r\n        height : 20px ;\r\n    }\r\n`;\r\n\r\nconst SearhInput = styled.input`\r\n    all : unset ;\r\n\r\n    position : relative ;\r\n\r\n    width : 100% ;\r\n    height : 36px ;\r\n\r\n    float : left ;\r\n\r\n    font-weight : 550 ;\r\n\r\n    font-size : 16px ;\r\n    color : #424242 ;\r\n\r\n    border-bottom : 1.5px solid  #424242 ;\r\n    padding-left : 5px ;\r\n\r\n    &::placeholder {\r\n        color : #888 ;\r\n    }\r\n    @media ${props => props.theme.mobileS} {\r\n        font-size : 8px ;\r\n        height : 18px ;\r\n        padding-left : 0px ;\r\n        color : #fff ;\r\n\r\n        &::placeholder {\r\n            color : #fff ;\r\n        }\r\n    }\r\n`;\r\n\r\nconst AsideMenu = ({ asideData, searchContents, searchTitle }) => {\r\n\r\n    const { mobileS } = size ;\r\n\r\n    const [ search, setSearch ] = useState('') ;\r\n\r\n    const [ show, setShow ] = useState(window.innerWidth <= mobileS ? true : false) ;\r\n    const [ menu, setMenu ] = useState(window.innerWidth <= mobileS ? false : true) ;\r\n\r\n    const viewContentNumCheck = innerWidth => {\r\n        if( innerWidth <= mobileS ) {\r\n            setShow(true) ;\r\n            setMenu(false) ;\r\n        }else if( innerWidth > mobileS ) {\r\n            setShow(false) ;\r\n            setMenu(true) ;\r\n        }\r\n    }\r\n\r\n    const onResize = (e) => {\r\n        const { currentTarget : { innerWidth } } = e ;\r\n\r\n        viewContentNumCheck(innerWidth) ;\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const { innerWidth } = window ;\r\n\r\n        viewContentNumCheck(innerWidth) ;\r\n\r\n        window.addEventListener('resize', onResize, false) ;\r\n    \r\n        return () => {\r\n          window.removeEventListener('resize', onResize, false) ;\r\n        }\r\n      }, []) ;\r\n\r\n      function onClickSideMenuEvent(e) {\r\n        e.stopImmediatePropagation() ;\r\n        setMenu(false) ;\r\n      }\r\n\r\n      useEffect(() => {\r\n\r\n        const { innerWidth } = window ;\r\n\r\n        if(innerWidth <= mobileS && menu)\r\n            window.onclick = onClickSideMenuEvent ;\r\n        else\r\n            window.onclick = null ;\r\n\r\n      }, [ menu ])\r\n \r\n    function onClickMenuContent(e, search) {\r\n        e.nativeEvent.stopImmediatePropagation() ;\r\n        searchContents(search) ;\r\n    }\r\n\r\n    function onSearchTitle(e) {\r\n        e.nativeEvent.stopImmediatePropagation() ;\r\n        e.preventDefault() ;\r\n\r\n        searchTitle(search) ;\r\n\r\n        setSearch('') ;\r\n    }\r\n\r\n    function onChangeSearchValue(e) {\r\n        e.nativeEvent.stopImmediatePropagation() ;\r\n        setSearch(e.target.value) ;\r\n    }\r\n\r\n    function onClickMenu(e) {\r\n        e.nativeEvent.stopImmediatePropagation() ;\r\n        setMenu(!menu) ;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledFontAwesomeIconMenu icon={faAlignJustify} display={show ? 'block' : 'none'} onClick={onClickMenu}/>\r\n                <Container display={menu ? 'block' : 'none'}>\r\n                    <SearchContainer>\r\n                        <Form onSubmit={onSearchTitle}>\r\n                            <FontAwesomeIconContainer>\r\n                                <StyledFontAwesomeIcon icon={faSearch} onClick={onSearchTitle} />\r\n                            </FontAwesomeIconContainer>\r\n                            <SearhInput \r\n                                onClick={(e) => e.nativeEvent.stopImmediatePropagation()} \r\n                                onChange={onChangeSearchValue} value={search} \r\n                                placeholder=\"게시물 검색..\" \r\n                            />\r\n                        </Form>\r\n                    </SearchContainer>\r\n                    <BigAsideMenuContainer>\r\n                        {asideData && asideData.map((aside, index) => {\r\n                            return (\r\n                                <AsideContent  \r\n                                    key={index}\r\n                                    title={aside.title}\r\n                                    menu={aside.menu}\r\n                                    onClickMenuContent={onClickMenuContent}\r\n                                />\r\n                            ) ;\r\n                        })}\r\n                    </BigAsideMenuContainer>\r\n                    <Link to={DOCUMENT}>\r\n                        <AllDataViewButton onClick={(e) => onClickMenuContent(e)}>\r\n                            전체 보기\r\n                        </AllDataViewButton>\r\n                    </Link>\r\n                </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        searchContents : search => dispatch(createAction.searchContents(search)),\r\n        searchTitle : search => dispatch(createAction.searchTitle(search))\r\n    }\r\n} ;\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(AsideMenu) ;",["205","206"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\fucntion.js",["207","208"],"import React, { useState } from 'react' ;\r\nimport { axiosApi } from './api' ;\r\n\r\nexport const useInputImg = (initialValue) => {\r\n    const [ file, setFile ] = useState(initialValue) ;\r\n    const [ url, setUrl ] = useState('') ;\r\n\r\n    const onChange = e => {\r\n        let reader = new FileReader() ;\r\n        const {\r\n            target : {\r\n                files : [ fileData ]\r\n            }\r\n        } = e ;\r\n        reader.onloadend = () => {\r\n            setFile(fileData) ;\r\n            setUrl(reader.result) ;\r\n        }\r\n        reader.readAsDataURL(fileData) ;\r\n    }\r\n    return { file, url, onChange } ;\r\n} ;","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Store\\store.js",["209","210"],"import { createStore, applyMiddleware, combineReducers } from 'redux' ;\r\nimport logger from 'redux-logger' ;\r\n\r\nimport { \r\n    blogContentNum,\r\n    blogPageContentNum,\r\n    typeChartData\r\n} from '../Util/util' ;\r\n\r\nconst STORE_DEFAULT_DATA = 'STORE_DEFAULT_DATA' ;\r\nconst PROJECT_DEFAULT_DATA = 'PROJECT_DEFAULT_DATA' ;\r\n\r\nconst SET_CONTENTS_DATA = 'SET_CONTENTS_DATA' ;\r\nconst SET_PAGE_CONTENTS_DATA = 'SET_PAGE_CONTENTS_DATA' ;\r\n\r\nconst UPDATE_SELECT = 'UPDATE_SELECT' ;\r\nconst UPDATE_PAGE_SELECT = 'UPDATE_PAGE_SELECT' ;\r\n\r\nconst SEARCH_CONTENTS = 'SEARCH_CONTENTS' ;\r\nconst SEARCH_TITLE = 'SEARCH_TITLE' ;\r\n\r\nconst setDefaultData = defaultData => ({\r\n        type : STORE_DEFAULT_DATA,\r\n        defaultData\r\n}) ;\r\n\r\nconst setContents = () => ({\r\n    type : SET_CONTENTS_DATA,\r\n}) ;\r\n\r\nconst setPageContents = contents => ({\r\n    type : SET_PAGE_CONTENTS_DATA,\r\n    contents\r\n}) ;\r\n\r\nconst updateSelect = select => ({\r\n    type : UPDATE_SELECT,\r\n    select\r\n}) ;\r\n\r\nconst updatePageSelect = select => ({\r\n    type : UPDATE_PAGE_SELECT,\r\n    select\r\n}) ;\r\n\r\nconst searchContents = (searchValue) => ({\r\n    type : SEARCH_CONTENTS,\r\n    searchValue,\r\n}) ;\r\n\r\nconst searchTitle = (searchValue) => ({\r\n    type : SEARCH_TITLE,\r\n    searchValue\r\n}) ;\r\n\r\nconst setProjectContents = (defaultData) => ({\r\n    type : PROJECT_DEFAULT_DATA,\r\n    defaultData\r\n}) ;\r\n\r\n// search all -> search 값 보내기 x\r\nconst dataForm = (array, search) => {\r\n\r\n    let num = 0 ;\r\n    const numCounte = blogContentNum ;\r\n\r\n    return !search ? array.reduce((prev, item, index ) => {\r\n        if(index === num) {\r\n            prev.push([]) ;\r\n            num += numCounte ;\r\n        }\r\n        prev[num / numCounte - 1][index % numCounte] = item ;\r\n        return prev ;\r\n    }, []) \r\n    :  array.filter(item =>  search === item.type).reduce((prev, item, index) => {\r\n        if(index === num) {\r\n            prev.push([]) ;\r\n            num += numCounte ;\r\n        }\r\n        prev[num / numCounte - 1][index % numCounte] = item ;\r\n\r\n        return prev ;\r\n    }, [])\r\n}\r\n\r\nconst contentReducer = (\r\n    state = {\r\n        defaultData : [],\r\n        contentsData : [],\r\n        buttonsData : [],\r\n        pageContents : [],\r\n        pageButtonsData : [],\r\n        select : 0,\r\n        pageSelect : 0,\r\n        contentType : []\r\n    },\r\n    action\r\n) => {\r\n\r\n    let contentsData ;\r\n    let buttonsData ;\r\n\r\n    let num = 0 ;\r\n    const numCounte = blogPageContentNum ;\r\n\r\n    switch(action.type) {\r\n        case STORE_DEFAULT_DATA :\r\n\r\n            const contentType = action.defaultData.reduce((prev, element) => {\r\n\r\n                prev.forEach((typeData) => {\r\n                    if(typeData.type === element.type)\r\n                        typeData.num ++ ;\r\n                }) ;\r\n                return prev ;\r\n            }, typeChartData) ;\r\n\r\n             return {\r\n                ...state,                                            \r\n                defaultData :  action.defaultData,\r\n                contentType\r\n            } ; \r\n             \r\n         case SET_CONTENTS_DATA :\r\n\r\n            contentsData = dataForm(state.defaultData) ;\r\n            buttonsData = contentsData.map((__, index) => index) ;\r\n\r\n             return {\r\n                 ...state,\r\n                 contentsData,\r\n                 buttonsData\r\n             } ;\r\n \r\n         case SEARCH_CONTENTS :\r\n\r\n            contentsData = dataForm(state.defaultData, action.searchValue) ;\r\n            buttonsData = contentsData.map((__ , index) => index) ;\r\n \r\n             return {\r\n                 ...state, \r\n                 contentsData,\r\n                 buttonsData\r\n             }\r\n\r\n        case UPDATE_SELECT :\r\n\r\n            return {\r\n                ...state,\r\n                select : action.select \r\n            }\r\n        case SET_PAGE_CONTENTS_DATA :\r\n\r\n            const pageData = action.contents.map((content, index) => ({ \r\n                id : content.id,\r\n                title : content.title, \r\n                updated_at : content.updated_at.substring(0, 10) \r\n            })) ;\r\n\r\n            const data = pageData.reduce((prev, item, index) => {\r\n                if(index === num) {\r\n                    prev.push([]) ;\r\n                    num += numCounte ;\r\n                }\r\n                prev[num / numCounte - 1][index % numCounte] = item ;\r\n                return prev ;\r\n            }, []) ;\r\n\r\n            buttonsData = data.map((__, index) => index) ;\r\n\r\n            return {\r\n                ...state,\r\n                pageContents : data,\r\n                pageButtonsData : buttonsData\r\n            } ;\r\n\r\n        case UPDATE_PAGE_SELECT : \r\n            return {\r\n                ...state,\r\n                pageSelect : action.select \r\n            }\r\n        case SEARCH_TITLE : \r\n                \r\n            contentsData = state.defaultData\r\n                        .filter(item => item.title.includes(action.searchValue, 0))\r\n                        .reduce((prev, item, index) => {\r\n                            if(index === num) {\r\n                                prev.push([]) ;\r\n                                num += numCounte ;\r\n                            }\r\n                            prev[num / numCounte - 1][index % numCounte] = item ;\r\n                    \r\n                            return prev ;\r\n                        }, [])\r\n\r\n            buttonsData = contentsData.map((__ , index) => index) ;\r\n\r\n            return {\r\n                ...state,\r\n                contentsData,\r\n                buttonsData\r\n            }\r\n        default :\r\n            return state ;\r\n     }\r\n}\r\n\r\nconst projectReducer = (\r\n    state = {\r\n        projectsData : [],\r\n    },\r\n    action\r\n) => {\r\n    switch(action.type) {\r\n        case PROJECT_DEFAULT_DATA :\r\n            return {\r\n                projectsData : action.defaultData\r\n            }\r\n        default : \r\n            return state ;\r\n    }\r\n} ;\r\n\r\nconst reducer = combineReducers({\r\n    content : contentReducer,\r\n    project : projectReducer\r\n}) ;\r\n\r\nconst store = createStore(reducer) ;\r\n\r\n// applyMiddleware(logger)\r\n\r\nexport const createAction = {\r\n    setContents,\r\n    updateSelect,\r\n    setPageContents,\r\n    updatePageSelect,\r\n    searchContents,\r\n    setDefaultData,\r\n    searchTitle,\r\n    setProjectContents\r\n} ;\r\n\r\nexport default store ;\r\n","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\routes.js",[],["211","212"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\ButtonContainer.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\util.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\BlogPageContent.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\BlogPageContainer.js",["213","214"],"import React, { useEffect } from 'react' ;\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components' ;\r\n\r\nimport Content from './BlogPageContent' ;\r\n\r\nconst Container = styled.div`\r\n    \r\n    width : 100% ;\r\n\r\n    display : ${props => props.display} ;\r\n    flex-direction : column ;\r\n\r\n    @media ${props => props.theme.mobileS} {\r\n        width : 100% ;\r\n    }\r\n`;\r\n\r\nconst BlogPageContainer = ({ pageContents, pageSelect }) => {\r\n    return (\r\n        <Container\r\n            display={pageSelect ? 'flex' : 'none' }\r\n        >\r\n            { pageContents && pageContents.map((content, index) => (\r\n                <Content \r\n                    key={index}\r\n                    content={content}\r\n                />\r\n            )) }\r\n        </Container>\r\n    ) ;\r\n} ;\r\n\r\n\r\nexport default BlogPageContainer ;",["215","216"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\index.js",[],["217","218"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Util\\theme.js",[],["219","220"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Routes\\Home.js",["221"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Router.js",[],["222","223"],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Loader.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Slide.js",["224"],"// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from 'swiper/react' ;\r\n\r\nimport SwiperCore, { Autoplay } from 'swiper'\r\n\r\nimport 'swiper/swiper-bundle.css' ;\r\nimport { connect } from 'react-redux';\r\nimport Content from './Blog/Content' ;\r\nimport { useEffect, useState } from 'react';\r\nimport { size } from '../Util/theme' ;\r\n\r\nSwiperCore.use([Autoplay]) ;\r\n\r\nconst Slide = ({ defaultData }) => {\r\n\r\n  const { tabletS, mobileL } = size ;\r\n\r\n  const [ viewContentNum, setViewContentNum ] = useState(3) ;\r\n\r\n  const viewContentNumCheck = innerWidth => {\r\n    if(innerWidth <= tabletS && innerWidth >= mobileL ) {\r\n      setViewContentNum(2) ;\r\n    }else if( innerWidth <= mobileL ) {\r\n      setViewContentNum(1) ;\r\n    }else if(innerWidth >= tabletS ) {\r\n      setViewContentNum(3) ;\r\n    }\r\n  }\r\n\r\n  const onResize = (e) => {\r\n    const { currentTarget : { innerWidth } } = e ;\r\n\r\n    viewContentNumCheck(innerWidth) ;\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    const { innerWidth } = window ;\r\n\r\n    const swiperContainer = document.querySelector('div.swiper-container') ;\r\n    swiperContainer.style.padding = \"10px 0 10px 0\" ;\r\n\r\n\r\n    viewContentNumCheck(innerWidth) ;\r\n\r\n    window.addEventListener('resize', onResize, false) ;\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', onResize, false) ;\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n      <Swiper\r\n        spaceBetween={30}\r\n        slidesPerView={viewContentNum}\r\n        onSlideChange={() => null}\r\n        onSwiper={(swiper) => {}}\r\n        autoplay={true}\r\n      >\r\n      { \r\n        defaultData.map((data, index) => (<SwiperSlide  key={index} width=\"300px\"><Content content={data}/></SwiperSlide>))\r\n      }\r\n      </Swiper>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const { \r\n        content : { \r\n            defaultData \r\n        } \r\n    } = state ;\r\n    return {\r\n        defaultData\r\n    } ;\r\n} ;\r\n\r\nexport default connect(mapStateToProps, null)(Slide) ;","C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\CommentContainer.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Blog\\Comment.js",[],"C:\\Users\\AAS\\Documents\\laravel_project_view\\src\\Components\\Home\\UseLanguageContainer.js",[],{"ruleId":"225","severity":1,"message":"226","line":196,"column":13,"nodeType":"227","messageId":"228","endLine":196,"endColumn":21},{"ruleId":"225","severity":1,"message":"229","line":120,"column":15,"nodeType":"227","messageId":"228","endLine":120,"endColumn":21},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"225","severity":1,"message":"234","line":182,"column":15,"nodeType":"227","messageId":"228","endLine":182,"endColumn":19},{"ruleId":"230","replacedBy":"235"},{"ruleId":"232","replacedBy":"236"},{"ruleId":"230","replacedBy":"237"},{"ruleId":"232","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":259,"column":8,"nodeType":"241","endLine":259,"endColumn":10,"suggestions":"242"},{"ruleId":"239","severity":1,"message":"243","line":261,"column":5,"nodeType":"227","endLine":261,"endColumn":14,"suggestions":"244"},{"ruleId":"239","severity":1,"message":"245","line":234,"column":5,"nodeType":"227","endLine":234,"endColumn":14,"suggestions":"246"},{"ruleId":"225","severity":1,"message":"247","line":1,"column":17,"nodeType":"227","messageId":"228","endLine":1,"endColumn":25},{"ruleId":"225","severity":1,"message":"248","line":10,"column":10,"nodeType":"227","messageId":"228","endLine":10,"endColumn":18},{"ruleId":"239","severity":1,"message":"249","line":55,"column":8,"nodeType":"241","endLine":55,"endColumn":10,"suggestions":"250"},{"ruleId":"230","replacedBy":"251"},{"ruleId":"232","replacedBy":"252"},{"ruleId":"230","replacedBy":"253"},{"ruleId":"232","replacedBy":"254"},{"ruleId":"239","severity":1,"message":"240","line":193,"column":10,"nodeType":"241","endLine":193,"endColumn":12,"suggestions":"255"},{"ruleId":"230","replacedBy":"256"},{"ruleId":"232","replacedBy":"257"},{"ruleId":"230","replacedBy":"258"},{"ruleId":"232","replacedBy":"259"},{"ruleId":"225","severity":1,"message":"260","line":1,"column":17,"nodeType":"227","messageId":"228","endLine":1,"endColumn":26},{"ruleId":"225","severity":1,"message":"247","line":1,"column":28,"nodeType":"227","messageId":"228","endLine":1,"endColumn":36},{"ruleId":"230","replacedBy":"261"},{"ruleId":"232","replacedBy":"262"},{"ruleId":"239","severity":1,"message":"263","line":51,"column":4,"nodeType":"241","endLine":51,"endColumn":6,"suggestions":"264"},{"ruleId":"230","replacedBy":"265"},{"ruleId":"232","replacedBy":"266"},{"ruleId":"239","severity":1,"message":"240","line":229,"column":10,"nodeType":"241","endLine":229,"endColumn":12,"suggestions":"267"},{"ruleId":"239","severity":1,"message":"268","line":245,"column":10,"nodeType":"241","endLine":245,"endColumn":18,"suggestions":"269"},{"ruleId":"230","replacedBy":"270"},{"ruleId":"232","replacedBy":"271"},{"ruleId":"225","severity":1,"message":"272","line":1,"column":8,"nodeType":"227","messageId":"228","endLine":1,"endColumn":13},{"ruleId":"225","severity":1,"message":"273","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":18},{"ruleId":"225","severity":1,"message":"274","line":1,"column":23,"nodeType":"227","messageId":"228","endLine":1,"endColumn":38},{"ruleId":"225","severity":1,"message":"275","line":2,"column":8,"nodeType":"227","messageId":"228","endLine":2,"endColumn":14},{"ruleId":"230","replacedBy":"276"},{"ruleId":"232","replacedBy":"277"},{"ruleId":"225","severity":1,"message":"260","line":1,"column":17,"nodeType":"227","messageId":"228","endLine":1,"endColumn":26},{"ruleId":"225","severity":1,"message":"278","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":17},{"ruleId":"230","replacedBy":"279"},{"ruleId":"232","replacedBy":"280"},{"ruleId":"230","replacedBy":"281"},{"ruleId":"232","replacedBy":"282"},{"ruleId":"230","replacedBy":"283"},{"ruleId":"232","replacedBy":"284"},{"ruleId":"239","severity":1,"message":"240","line":241,"column":10,"nodeType":"241","endLine":241,"endColumn":12,"suggestions":"285"},{"ruleId":"230","replacedBy":"286"},{"ruleId":"232","replacedBy":"287"},{"ruleId":"239","severity":1,"message":"240","line":51,"column":6,"nodeType":"241","endLine":51,"endColumn":8,"suggestions":"288"},"no-unused-vars","'lineData' is assigned a value but never used.","Identifier","unusedVar","'imgUrl' is assigned a value but never used.","no-native-reassign",["289"],"no-negated-in-lhs",["290"],"'data' is assigned a value but never used.",["289"],["290"],["289"],["290"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onResize' and 'viewContentNumCheck'. Either include them or remove the dependency array.","ArrayExpression",["291"],"React Hook useEffect contains a call to 'setLogin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [cookies] as a second argument to the useEffect Hook.",["292"],"React Hook useEffect contains a call to 'setData'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.cookies, data] as a second argument to the useEffect Hook.",["293"],"'useState' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'pageContentsPotition' and 'updatePageSelect'. Either include them or remove the dependency array. If 'updatePageSelect' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["294"],["289"],["290"],["289"],["290"],["295"],["289"],["290"],["289"],["290"],"'useEffect' is defined but never used.",["289"],["290"],"React Hook useEffect has missing dependencies: 'setContents', 'setDefaultData', 'setPageContents', and 'setProjectContents'. Either include them or remove the dependency array. If 'setDefaultData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["296"],["289"],["290"],["297"],"React Hook useEffect has a missing dependency: 'mobileS'. Either include it or remove the dependency array.",["298"],["289"],["290"],"'React' is defined but never used.","'axiosApi' is defined but never used.","'applyMiddleware' is defined but never used.","'logger' is defined but never used.",["289"],["290"],"'connect' is defined but never used.",["289"],["290"],["289"],["290"],["289"],["290"],["299"],["289"],["290"],["300"],"no-global-assign","no-unsafe-negation",{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"301","fix":"309"},{"desc":"310","fix":"311"},{"desc":"301","fix":"312"},{"desc":"313","fix":"314"},{"desc":"301","fix":"315"},{"desc":"301","fix":"316"},"Update the dependencies array to be: [onResize, viewContentNumCheck]",{"range":"317","text":"318"},"Add dependencies array: [cookies]",{"range":"319","text":"320"},"Add dependencies array: [props.cookies, data]",{"range":"321","text":"322"},"Update the dependencies array to be: [pageContentsPotition, updatePageSelect]",{"range":"323","text":"324"},{"range":"325","text":"318"},"Update the dependencies array to be: [setContents, setDefaultData, setPageContents, setProjectContents]",{"range":"326","text":"327"},{"range":"328","text":"318"},"Update the dependencies array to be: [menu, mobileS]",{"range":"329","text":"330"},{"range":"331","text":"318"},{"range":"332","text":"318"},[5050,5052],"[onResize, viewContentNumCheck]",[5243,5243],", [cookies]",[5176,5176],", [props.cookies, data]",[1229,1231],"[pageContentsPotition, updatePageSelect]",[4089,4091],[1088,1090],"[setContents, setDefaultData, setPageContents, setProjectContents]",[4798,4800],[5154,5162],"[menu, mobileS]",[4783,4785],[1338,1340]]